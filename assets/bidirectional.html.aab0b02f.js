import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";import{o as i,c as r,a as s,b as a,w as p,d as n,e as l,r as o}from"./app.2d48c0a5.js";const u={},m=s("h1",{id:"\u53CC\u5411\u641C\u7D22",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u53CC\u5411\u641C\u7D22","aria-hidden":"true"},"#"),n(" \u53CC\u5411\u641C\u7D22")],-1),k=s("p",null,"\u672C\u9875\u9762\u5C06\u7B80\u8981\u4ECB\u7ECD\u4E24\u79CD\u53CC\u5411\u641C\u7D22\u7B97\u6CD5\uFF1A\u53CC\u5411\u540C\u65F6\u641C\u7D22\u548C Meet in the middle\u3002",-1),d=s("h2",{id:"\u53CC\u5411\u540C\u65F6\u641C\u7D22",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u53CC\u5411\u540C\u65F6\u641C\u7D22","aria-hidden":"true"},"#"),n(" \u53CC\u5411\u540C\u65F6\u641C\u7D22")],-1),h=n("\u53CC\u5411\u540C\u65F6\u641C\u7D22\u7684\u57FA\u672C\u601D\u8DEF\u662F\u4ECE\u72B6\u6001\u56FE\u4E0A\u7684\u8D77\u70B9\u548C\u7EC8\u70B9\u540C\u65F6\u5F00\u59CB\u8FDB\u884C "),v=n("\u5E7F\u641C"),b=n(" \u6216 "),g=n("\u6DF1\u641C"),w=n("\u3002\u5982\u679C\u53D1\u73B0\u641C\u7D22\u7684\u4E24\u7AEF\u76F8\u9047\u4E86\uFF0C\u90A3\u4E48\u53EF\u4EE5\u8BA4\u4E3A\u662F\u83B7\u5F97\u4E86\u53EF\u884C\u89E3\u3002"),y=l(`<p>\u53CC\u5411\u5E7F\u641C\u7684\u6B65\u9AA4\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5C06\u5F00\u59CB\u7ED3\u70B9\u548C\u76EE\u6807\u7ED3\u70B9\u52A0\u5165\u961F\u5217 q
\u6807\u8BB0\u5F00\u59CB\u7ED3\u70B9\u4E3A 1
\u6807\u8BB0\u76EE\u6807\u7ED3\u70B9\u4E3A 2
while (\u961F\u5217 q \u4E0D\u4E3A\u7A7A)
{
  \u4ECE q.front() \u6269\u5C55\u51FA\u65B0\u7684 s \u4E2A\u7ED3\u70B9
  
  \u5982\u679C \u65B0\u6269\u5C55\u51FA\u7684\u7ED3\u70B9\u5DF2\u7ECF\u88AB\u5176\u4ED6\u6570\u5B57\u6807\u8BB0\u8FC7
    \u90A3\u4E48 \u8868\u793A\u641C\u7D22\u7684\u4E24\u7AEF\u78B0\u649E
    \u90A3\u4E48 \u5FAA\u73AF\u7ED3\u675F
  
  \u5982\u679C \u65B0\u7684 s \u4E2A\u7ED3\u70B9\u662F\u4ECE\u5F00\u59CB\u7ED3\u70B9\u6269\u5C55\u6765\u7684
    \u90A3\u4E48 \u5C06\u8FD9\u4E2A s \u4E2A\u7ED3\u70B9\u6807\u8BB0\u4E3A 1 \u5E76\u4E14\u5165\u961F q 
    
  \u5982\u679C \u65B0\u7684 s \u4E2A\u7ED3\u70B9\u662F\u4ECE\u76EE\u6807\u7ED3\u70B9\u6269\u5C55\u6765\u7684
    \u90A3\u4E48 \u5C06\u8FD9\u4E2A s \u4E2A\u7ED3\u70B9\u6807\u8BB0\u4E3A 2 \u5E76\u4E14\u5165\u961F q
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="meet-in-the-middle" tabindex="-1"><a class="header-anchor" href="#meet-in-the-middle" aria-hidden="true">#</a> Meet in the middle</h2>`,3),_={class:"custom-container warning"},x=s("p",{class:"custom-container-title"},"\u6CE8\u610F",-1),f=n("\u200B \u672C\u8282\u8981\u4ECB\u7ECD\u7684\u4E0D\u662F "),M=s("strong",null,"\u4E8C\u5206\u641C\u7D22",-1),O=n("\uFF08\u4E8C\u5206\u641C\u7D22\u7684\u53E6\u5916\u4E00\u4E2A\u8BD1\u540D\u4E3A\u201C\u6298\u534A\u641C\u7D22\u201D\uFF09\u3002"),z=s("p",null,"Meet in the middle \u7B97\u6CD5\u6CA1\u6709\u6B63\u5F0F\u8BD1\u540D\uFF0C\u5E38\u89C1\u7684\u7FFB\u8BD1\u4E3A\u300C\u6298\u534A\u641C\u7D22\u300D\u3001\u300C\u53CC\u5411\u641C\u7D22\u300D\u6216\u300C\u4E2D\u9014\u76F8\u9047\u300D\u3002\u5B83\u9002\u7528\u4E8E\u8F93\u5165\u6570\u636E\u8F83\u5C0F\uFF0C\u4F46\u8FD8\u6CA1\u5C0F\u5230\u80FD\u76F4\u63A5\u4F7F\u7528\u66B4\u529B\u641C\u7D22\u7684\u60C5\u51B5\u3002",-1),L=s("p",null,"\u4E3B\u8981\u601D\u60F3\u662F\u5C06\u6574\u4E2A\u641C\u7D22\u8FC7\u7A0B\u5206\u6210\u4E24\u534A\uFF0C\u5206\u522B\u641C\u7D22\uFF0C\u6700\u540E\u5C06\u4E24\u534A\u7684\u7ED3\u679C\u5408\u5E76\u3002",-1),j=s("p",null,[n("\u66B4\u529B\u641C\u7D22\u7684\u590D\u6742\u5EA6\u5F80\u5F80\u662F\u6307\u6570\u7EA7\u7684\uFF0C\u800C\u6539\u7528 meet in the middle \u7B97\u6CD5\u540E\u590D\u6742\u5EA6\u7684\u6307\u6570\u53EF\u4EE5\u51CF\u534A\uFF0C\u5373\u8BA9\u590D\u6742\u5EA6\u4ECE "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"a"),s("mi",null,"b")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(a^b)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"b")])])])])])])]),s("span",{class:"mclose"},")")])])]),n(" \u964D\u5230 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"a"),s("mrow",null,[s("mi",null,"b"),s("mi",{mathvariant:"normal"},"/"),s("mn",null,"2")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(a^{b/2})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"a"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"b"),s("span",{class:"mord mtight"},"/2")])])])])])])])]),s("span",{class:"mclose"},")")])])]),n("\u3002")],-1),q=s("div",{class:"custom-container note"},[s("p",{class:"custom-container-title"},"\u4F8B\u9898 [\u300CUSACO09NOV\u300D\u706F Lights](https://www.luogu.com.cn/problem/P2962)"),s("p",null,[n("\u200B \u6709 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),n(" \u76CF\u706F\uFF0C\u6BCF\u76CF\u706F\u4E0E\u82E5\u5E72\u76CF\u706F\u76F8\u8FDE\uFF0C\u6BCF\u76CF\u706F\u4E0A\u90FD\u6709\u4E00\u4E2A\u5F00\u5173\uFF0C\u5982\u679C\u6309\u4E0B\u4E00\u76CF\u706F\u4E0A\u7684\u5F00\u5173\uFF0C\u8FD9\u76CF\u706F\u4EE5\u53CA\u4E0E\u4E4B\u76F8\u8FDE\u7684\u6240\u6709\u706F\u7684\u5F00\u5173\u72B6\u6001\u90FD\u4F1A\u6539\u53D8\u3002\u4E00\u5F00\u59CB\u6240\u6709\u706F\u90FD\u662F\u5173\u7740\u7684\uFF0C\u4F60\u9700\u8981\u5C06\u6240\u6709\u706F\u6253\u5F00\uFF0C\u6C42\u6700\u5C0F\u7684\u6309\u5F00\u5173\u6B21\u6570\u3002")]),s("p",null,[n("\u200B "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mo",null,"\u2264"),s("mi",null,"n"),s("mo",null,"\u2264"),s("mn",null,"35")]),s("annotation",{encoding:"application/x-tex"},"1\\le n\\le 35")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7804em","vertical-align":"-0.136em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"\u2264"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7719em","vertical-align":"-0.136em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"\u2264"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"35")])])]),n("\u3002")])],-1),N=s("div",{class:"custom-container note"},[s("p",{class:"custom-container-title"},"\u89E3\u9898\u601D\u8DEF"),s("p",null,[n("\u200B \u5982\u679C\u8FD9\u9053\u9898\u66B4\u529B DFS \u627E\u5F00\u5173\u706F\u7684\u72B6\u6001\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(2^{n})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])])])])])])]),s("span",{class:"mclose"},")")])])]),n(", \u663E\u7136\u8D85\u65F6\u3002\u4E0D\u8FC7\uFF0C\u5982\u679C\u6211\u4EEC\u7528 meet in middle \u7684\u8BDD\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u53EF\u4EE5\u4F18\u5316\u81F3 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mi",{mathvariant:"normal"},"/"),s("mn",null,"2")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n2^{n/2})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mord mtight"},"/2")])])])])])])])]),s("span",{class:"mclose"},")")])])]),n("\u3002meet in middle \u5C31\u662F\u8BA9\u6211\u4EEC\u5148\u627E\u4E00\u534A\u7684\u72B6\u6001\uFF0C\u4E5F\u5C31\u662F\u627E\u51FA\u53EA\u4F7F\u7528\u7F16\u53F7\u4E3A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),n(" \u5230 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"m"),s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"d")]),s("annotation",{encoding:"application/x-tex"},"\\mathrm{mid}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathrm"},"mid")])])])]),n(" \u7684\u5F00\u5173\u80FD\u591F\u5230\u8FBE\u7684\u72B6\u6001\uFF0C\u518D\u627E\u51FA\u53EA\u4F7F\u7528\u53E6\u4E00\u534A\u5F00\u5173\u80FD\u5230\u8FBE\u7684\u72B6\u6001\u3002\u5982\u679C\u524D\u534A\u6BB5\u548C\u540E\u534A\u6BB5\u5F00\u542F\u7684\u706F\u4E92\u8865\uFF0C\u5C06\u8FD9\u4E24\u6BB5\u5408\u5E76\u8D77\u6765\u5C31\u5F97\u5230\u4E86\u4E00\u79CD\u5C06\u6240\u6709\u706F\u6253\u5F00\u7684\u65B9\u6848\u3002\u5177\u4F53\u5B9E\u73B0\u65F6\uFF0C\u53EF\u4EE5\u628A\u524D\u534A\u6BB5\u7684\u72B6\u6001\u4EE5\u53CA\u8FBE\u5230\u6BCF\u79CD\u72B6\u6001\u7684\u6700\u5C11\u6309\u5F00\u5173\u6B21\u6570\u5B58\u50A8\u5728 map \u91CC\u9762\uFF0C\u641C\u7D22\u540E\u534A\u6BB5\u65F6\uFF0C\u6BCF\u641C\u51FA\u4E00\u79CD\u65B9\u6848\uFF0C\u5C31\u628A\u5B83\u4E0E\u4E92\u8865\u7684\u7B2C\u4E00\u6BB5\u65B9\u6848\u5408\u5E76\u6765\u66F4\u65B0\u7B54\u6848\u3002")])],-1),I=l(`<details class="custom-container details"><summary>\u53C2\u8003\u4EE3\u7801</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> ans <span class="token operator">=</span> <span class="token number">0x7fffffff</span><span class="token punctuation">;</span>
map<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> f<span class="token punctuation">;</span>
<span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>
  a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FDB\u884C\u9884\u5904\u7406</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5BF9\u8F93\u5165\u7684\u8FB9\u7684\u60C5\u51B5\u8FDB\u884C\u5904\u7406</span>
    <span class="token keyword">int</span> u<span class="token punctuation">,</span> v<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> u <span class="token operator">&gt;&gt;</span> v<span class="token punctuation">;</span>
    <span class="token operator">--</span>u<span class="token punctuation">;</span>
    <span class="token operator">--</span>v<span class="token punctuation">;</span>
    a<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    a<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5BF9\u524D\u4E00\u534A\u8FDB\u884C\u641C\u7D22</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">&gt;&gt;</span> j<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t <span class="token operator">^=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token operator">++</span>cnt<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>f<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>
      f<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> cnt<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
      f<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5BF9\u540E\u4E00\u534A\u8FDB\u884C\u641C\u7D22</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">&gt;&gt;</span> j<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t <span class="token operator">^=</span> a<span class="token punctuation">[</span>n <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token operator">++</span>cnt<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> n<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">^</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>
      ans <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> cnt <span class="token operator">+</span> f<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> n<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">^</span> t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  cout <span class="token operator">&lt;&lt;</span> ans<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u5916\u90E8\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u5916\u90E8\u94FE\u63A5" aria-hidden="true">#</a> \u5916\u90E8\u94FE\u63A5</h2>`,2),V={href:"https://www.quora.com/What-is-meet-in-the-middle-algorithm-w-r-t-competitive-programming",target:"_blank",rel:"noopener noreferrer"},S=n("What is meet in the middle algorithm w.r.t. competitive programming? - Quora"),A={href:"https://www.youtube.com/watch?v=57SUNQL4JFA",target:"_blank",rel:"noopener noreferrer"},B=n("Meet in the Middle Algorithm - YouTube");function C(E,F){const t=o("RouterLink"),e=o("ExternalLinkIcon");return i(),r("div",null,[m,k,d,s("p",null,[h,a(t,{to:"/zh/OI-wiki/search/bfs.html"},{default:p(()=>[v]),_:1}),b,a(t,{to:"/zh/OI-wiki/search/dfs.html"},{default:p(()=>[g]),_:1}),w]),y,s("div",_,[x,s("p",null,[f,a(t,{to:"/zh/OI-wiki/basic/binary.html"},{default:p(()=>[M]),_:1}),O])]),z,L,j,q,N,I,s("ul",null,[s("li",null,[s("a",V,[S,a(e)])]),s("li",null,[s("a",A,[B,a(e)])])])])}var T=c(u,[["render",C],["__file","bidirectional.html.vue"]]);export{T as default};
