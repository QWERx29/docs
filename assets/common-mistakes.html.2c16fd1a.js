import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{o,c,a as n,b as p,e as a,d as s,r as l}from"./app.6d7cb999.js";const i={},u=a(`<h1 id="\u5E38\u89C1\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u9519\u8BEF" aria-hidden="true">#</a> \u5E38\u89C1\u9519\u8BEF</h1><p>\u672C\u9875\u9762\u4E3B\u8981\u5217\u4E3E\u4E00\u4E9B\u7ADE\u8D5B\u4E2D\u5F88\u591A\u4EBA\u7ECF\u5E38\u4F1A\u51FA\u73B0\u7684\u9519\u8BEF\u3002</p><h2 id="\u4F1A\u5F15\u8D77-ce-\u7684\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u4F1A\u5F15\u8D77-ce-\u7684\u9519\u8BEF" aria-hidden="true">#</a> \u4F1A\u5F15\u8D77 CE \u7684\u9519\u8BEF</h2><p>\u8FD9\u7C7B\u9519\u8BEF\u591A\u4E3A\u8BCD\u6CD5\u3001\u8BED\u6CD5\u548C\u8BED\u4E49\u9519\u8BEF\uFF0C\u5F15\u53D1\u7684\u539F\u56E0\u8F83\u4E3A\u7B80\u5355\uFF0C\u4FEE\u590D\u96BE\u5EA6\u8F83\u4F4E\u3002</p><p>\u4F8B\uFF1A</p><ul><li><p><code>int main()</code> \u5199\u4E3A <code>int mian()</code> \u4E4B\u7C7B\u7684\u62FC\u5199\u9519\u8BEF\u3002</p></li><li><p>\u5199\u5B8C <code>struct</code> \u6216 <code>class</code> \u5FD8\u8BB0\u5199\u5206\u53F7\u3002</p></li><li><p>\u6570\u7EC4\u5F00\u592A\u5927\uFF0C\uFF08\u5728 OJ \u4E0A\uFF09\u4F7F\u7528\u4E86\u4E0D\u5408\u6CD5\u7684\u51FD\u6570\uFF08\u4F8B\u5982\u591A\u7EBF\u7A0B\uFF09\uFF0C\u6216\u8005\u51FD\u6570\u58F0\u660E\u4F46\u672A\u5B9A\u4E49\uFF0C\u4F1A\u5F15\u8D77\u94FE\u63A5\u9519\u8BEF\u3002</p></li><li><p>\u51FD\u6570\u53C2\u6570\u7C7B\u578B\u4E0D\u5339\u914D\u3002</p><ul><li><p>\u793A\u4F8B\uFF1A\u5982\u4F7F\u7528 <code>&lt;algorithm&gt;</code> \u5934\u6587\u4EF6\u4E2D\u7684 <code>max</code> \u51FD\u6570\u65F6\uFF0C\u4F20\u5165\u4E86\u4E00\u4E2A <code>int</code> \u7C7B\u578B\u53C2\u6570\u548C\u4E00\u4E2A <code>long long</code> \u7C7B\u578B\u53C2\u6570\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// query \u4E3A\u8FD4\u56DE long long \u7C7B\u578B\u7684\u81EA\u5B9A\u4E49\u51FD\u6570</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%lld\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u9519\u8BEF    \u6CA1\u6709\u4E0E\u53C2\u6570\u5217\u8868\u5339\u914D\u7684 \u91CD\u8F7D\u51FD\u6570 &quot;std::max&quot; \u5B9E\u4F8B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u4F7F\u7528 <code>goto</code> \u548C <code>switch-case</code> \u7684\u65F6\u5019\u8DF3\u8FC7\u4E86\u4E00\u4E9B\u5C40\u90E8\u53D8\u91CF\u7684\u521D\u59CB\u5316\u3002</p></li></ul><h2 id="\u4E0D\u4F1A\u5F15\u8D77-ce-\u4F46\u4F1A\u5F15\u8D77-warning-\u7684\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u4F1A\u5F15\u8D77-ce-\u4F46\u4F1A\u5F15\u8D77-warning-\u7684\u9519\u8BEF" aria-hidden="true">#</a> \u4E0D\u4F1A\u5F15\u8D77 CE \u4F46\u4F1A\u5F15\u8D77 Warning \u7684\u9519\u8BEF</h2><p>\u72AF\u8FD9\u7C7B\u9519\u8BEF\u65F6\u5199\u4E0B\u7684\u7A0B\u5E8F\u867D\u7136\u80FD\u901A\u8FC7\u7F16\u8BD1\uFF0C\u4F46\u5927\u6982\u7387\u4F1A\u5F97\u5230\u9519\u8BEF\u7684\u7A0B\u5E8F\u8FD0\u884C\u7ED3\u679C\u3002\u8FD9\u7C7B\u9519\u8BEF\u4F1A\u5728\u4F7F\u7528 <code>-W{warningtype}</code> \u53C2\u6570\u7F16\u8BD1\u65F6\u88AB\u7F16\u8BD1\u5668\u6307\u51FA\u3002</p><ul><li><p>\u8D4B\u503C\u8FD0\u7B97\u7B26 <code>=</code> \u548C\u6BD4\u8F83\u8FD0\u7B97\u7B26 <code>==</code> \u4E0D\u5206\u3002</p><ul><li>\u793A\u4F8B\uFF1A</li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code> std<span class="token double-colon punctuation">::</span><span class="token function">srand</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">int</span> n <span class="token operator">=</span> std<span class="token double-colon punctuation">::</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Yes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">else</span>
   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;No&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
 <span class="token comment">// \u65E0\u8BBA n \u7684\u968F\u673A\u6240\u5F97\u503C\u4E3A\u591A\u5C11\uFF0C\u8F93\u51FA\u80AF\u5B9A\u662F Yes</span>
 <span class="token comment">// \u8B66\u544A    \u8FD0\u7B97\u7B26\u4E0D\u6B63\u786E: \u5728 Boolean \u4E0A\u4E0B\u6587\u4E2D\u6267\u884C\u4E86\u5E38\u91CF\u8D4B\u503C\u3002\u5E94\u8003\u8651\u6539\u7528\u201C==\u201D\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5982\u679C\u786E\u5B9E\u60F3\u5728\u539F\u5E94\u4F7F\u7528 == \u7684\u8BED\u53E5\u91CC\u4F7F\u7528 =\uFF08\u6BD4\u5982 while (foo = bar)\uFF09\uFF0C\u53C8\u4E0D\u60F3\u6536\u5230 Warning\uFF0C\u53EF\u4EE5\u4F7F\u7528 \u53CC\u62EC\u53F7\uFF1Awhile ((foo = bar))\u3002</li></ul></li><li><p>\u7531\u4E8E\u8FD0\u7B97\u7B26\u4F18\u5148\u7EA7\u4EA7\u751F\u7684\u9519\u8BEF\u3002</p><ul><li><p>\u793A\u4F8B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u9519\u8BEF</span>
<span class="token comment">// std::cout &lt;&lt; (1 &lt;&lt; 1 + 1);</span>
<span class="token comment">// \u6B63\u786E</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8B66\u544A    \u201C&lt;&lt;\u201D: \u68C0\u67E5\u8FD0\u7B97\u7B26\u4F18\u5148\u7EA7\u662F\u5426\u6709\u53EF\u80FD\u7684\u9519\u8BEF\uFF1B\u4F7F\u7528\u62EC\u53F7\u9610\u660E\u4F18\u5148\u7EA7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u4E0D\u6B63\u786E\u5730\u4F7F\u7528 <code>static</code> \u4FEE\u9970\u7B26\u3002</p></li><li><p>\u4F7F\u7528 <code>scanf</code> \u8BFB\u5165\u7684\u65F6\u5019\u6CA1\u52A0\u53D6\u5730\u5740\u7B26 <code>&amp;</code>\u3002</p></li><li><p>\u4F7F\u7528 <code>scanf</code> \u6216 <code>printf</code> \u7684\u65F6\u5019\u53C2\u6570\u7C7B\u578B\u4E0E\u683C\u5F0F\u6307\u5B9A\u7B26\u4E0D\u7B26\u3002</p></li><li><p>\u540C\u65F6\u4F7F\u7528\u4F4D\u8FD0\u7B97\u548C\u903B\u8F91\u8FD0\u7B97\u7B26 <code>==</code> \u5E76\u4E14\u672A\u52A0\u62EC\u53F7\u3002</p><ul><li>\u793A\u4F8B\uFF1A\`(x &gt;&gt; j) &amp; 3 == 2\`\`</li></ul></li><li><p><code>int</code> \u5B57\u9762\u91CF\u6EA2\u51FA\u3002</p><ul><li>\u793A\u4F8B\uFF1A<code>long long x = 0x7f7f7f7f7f7f7f7f</code>\uFF0C<code>1&lt;&lt;62</code>\u3002</li></ul></li><li><p>\u672A\u521D\u59CB\u5316\u5C40\u90E8\u53D8\u91CF\uFF0C\u5BFC\u81F4\u5C40\u90E8\u53D8\u91CF\u88AB\u8D4B\u4E88\u5783\u573E\u521D\u503C\u3002</p></li></ul>`,9),r={class:"custom-container info"},d=n("p",{class:"custom-container-title"},"\u672A\u521D\u59CB\u5316\u53D8\u91CF\u4F1A\u53D1\u751F\u4EC0\u4E48",-1),k=s("\u539F\u6587\uFF1A"),m={href:"https://loj.ac/d/3679",target:"_blank",rel:"noopener noreferrer"},v=s("https://loj.ac/d/3679"),h=s(" by @hly1204"),b=n("p",null,"\u4F8B\u5982\u6211\u4EEC\u5728 C++ \u4E2D\u58F0\u660E\u4E00\u4E2A int a; \u4F46\u4E0D\u521D\u59CB\u5316\uFF0C\u53EF\u80FD\u6709\u65F6\u5019\u4F1A\u8BA4\u4E3A a \u662F\u4E00\u4E2A\u201C\u968F\u673A\u201D\uFF08\u5176\u5B9E\u53EF\u80FD\u4E0D\u662F\u771F\u7684\u968F\u673A\uFF09\u7684\u503C\uFF0C\u4F46\u662F\u53EF\u80FD\u5C06\u5176\u8BA4\u4E3A\u662F\u4E00\u4E2A\u56FA\u5B9A\u7684\u503C\uFF0C\u4F46\u5B9E\u9645\u4E0A\u5E76\u975E\u5982\u6B64\u3002",-1),g=n("p",null,"\u6211\u4EEC\u5728\u7B80\u5355\u7684\u6D4B\u8BD5\u4EE3\u7801\u4E2D",-1),f={href:"https://wandbox.org/permlink/T2uiVe4n9Hg4EyWT",target:"_blank",rel:"noopener noreferrer"},_=s("https://wandbox.org/permlink/T2uiVe4n9Hg4EyWT"),y=a(`<p>\u4EE3\u7801\u662F\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a<span class="token punctuation">;</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>boolalpha <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> a <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> a <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E00\u4E9B\u7F16\u8BD1\u5668\u548C\u73AF\u5883\u4E0A\u5F00\u542F\u4F18\u5316\u540E\uFF0C\u5176\u8F93\u51FA\u4E3A false\u3002</p>`,3),w=s("\u6709\u5174\u8DA3\u7684\u8BDD\u53EF\u4EE5\u770B "),x={href:"https://www.ralfj.de/blog/2019/07/14/uninit.html%EF%BC%8C%E5%B0%BD%E7%AE%A1%E5%85%B6%E5%AE%9E%E7%94%A8",target:"_blank",rel:"noopener noreferrer"},q=s("https://www.ralfj.de/blog/2019/07/14/uninit.html\uFF0C\u5C3D\u7BA1\u5176\u5B9E\u7528"),E=s(" Rust \u505A\u7684\u5B9E\u9A8C\uFF0C\u4F46\u662F\u672C\u8D28\u662F\u4E00\u6837\u7684\u3002"),M=a(`<ul><li><p>\u5C40\u90E8\u53D8\u91CF\u4E0E\u5168\u5C40\u53D8\u91CF\u91CD\u540D\uFF0C\u5BFC\u81F4\u5168\u5C40\u53D8\u91CF\u88AB\u610F\u5916\u8986\u76D6\u3002\uFF08\u5F00 <code>-Wshadow</code> \u5C31\u53EF\u68C0\u67E5\u6B64\u7C7B\u9519\u8BEF\u3002\uFF09</p></li><li><p>\u8FD0\u7B97\u7B26\u91CD\u8F7D\u540E\u5F15\u53D1\u7684\u8F93\u51FA\u9519\u8BEF\u3002</p><ul><li><p>\u793A\u4F8B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u672C\u610F\uFF1A\u524D\u4E00\u4E2A &lt;&lt; \u4E3A\u91CD\u8F7D\u540E\u7684\u8FD0\u7B97\u7B26\uFF0C\u8868\u793A\u8F93\u51FA\uFF1B\u540E\u4E00\u4E2A &lt;&lt; \u4E3A\u79FB\u4F4D\u8FD0\u7B97\u7B26\uFF0C\u8868\u793A\u5C06 1</span>
<span class="token comment">// \u5DE6\u79FB 1 \u4F4D\u3002 \u4F46\u7531\u4E8E\u5FD8\u8BB0\u52A0\u62EC\u53F7\uFF0C\u5BFC\u81F4\u7F16\u8BD1\u5668\u5C06\u540E\u4E00\u4E2A &lt;&lt;</span>
<span class="token comment">// \u4E5F\u5224\u4F5C\u8F93\u51FA\u8FD0\u7B97\u7B26\uFF0C\u800C\u5BFC\u81F4\u8F93\u51FA\u7684\u7ED3\u679C\u4E0E\u9884\u671F\u4E0D\u540C\u3002 \u9519\u8BEF std::cout &lt;&lt; 1 &lt;&lt; 1; \u6B63\u786E</span>
std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="\u65E2\u4E0D\u4F1A\u5F15\u8D77-ce-\u4E5F\u4E0D\u4F1A\u5F15\u53D1-warning-\u7684\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u65E2\u4E0D\u4F1A\u5F15\u8D77-ce-\u4E5F\u4E0D\u4F1A\u5F15\u53D1-warning-\u7684\u9519\u8BEF" aria-hidden="true">#</a> \u65E2\u4E0D\u4F1A\u5F15\u8D77 CE \u4E5F\u4E0D\u4F1A\u5F15\u53D1 Warning \u7684\u9519\u8BEF</h2><p>\u8FD9\u7C7B\u9519\u8BEF\u65E0\u6CD5\u88AB\u7F16\u8BD1\u5668\u53D1\u73B0\uFF0C\u4EC5\u80FD\u81EA\u884C\u67E5\u660E\u3002</p><h3 id="\u4F1A\u5BFC\u81F4-wa-\u7684\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u4F1A\u5BFC\u81F4-wa-\u7684\u9519\u8BEF" aria-hidden="true">#</a> \u4F1A\u5BFC\u81F4 WA \u7684\u9519\u8BEF</h3>`,4),O=a(`<li><p>\u4E0A\u4E00\u7EC4\u6570\u636E\u5904\u7406\u5B8C\u6BD5\uFF0C\u8BFB\u5165\u4E0B\u4E00\u7EC4\u6570\u636E\u524D\uFF0C\u672A\u6E05\u7A7A\u6570\u7EC4\u3002</p></li><li><p>\u8BFB\u5165\u4F18\u5316\u672A\u5224\u65AD\u8D1F\u6570\u3002</p></li><li><p>\u6240\u7528\u6570\u636E\u7C7B\u578B\u4F4D\u5BBD\u4E0D\u8DB3\uFF0C\u5BFC\u81F4\u6EA2\u51FA\u3002</p><ul><li>\u5982\u4E60\u8BED\u201C\u4E09\u5E74 OI \u4E00\u573A\u7A7A\uFF0C\u4E0D\u5F00 <code>long long</code> \u89C1\u7956\u5B97\u201D\u6240\u63CF\u8FF0\u7684\u573A\u666F\u3002\u9009\u624B\u56E0\u4E3A\u6CA1\u6709\u5728\u6B63\u786E\u7684\u5730\u65B9\u5F00 <code>long long</code>\uFF08\u5C06\u6574\u6570\u5B9A\u4E49\u4E3A <code>long long</code> \u7C7B\u578B\uFF09\uFF0C\u5BFC\u81F4\u5F97\u51FA\u9519\u8BEF\u7684\u7B54\u6848\u800C\u5931\u5206\u3002</li></ul></li><li><p>\u5B58\u56FE\u65F6\uFF0C\u8282\u70B9\u7F16\u53F7 0 \u5F00\u59CB\uFF0C\u800C\u9898\u76EE\u7ED9\u7684\u8FB9\u4E2D\u4E24\u4E2A\u7AEF\u70B9\u7684\u7F16\u53F7\u4ECE 1 \u5F00\u59CB\uFF0C\u8BFB\u5165\u7684\u65F6\u5019\u5FD8\u8BB0 -1\u3002</p></li><li><p>\u5927/\u5C0F\u4E8E\u53F7\u6253\u9519\u6216\u6253\u53CD\u3002</p></li><li><p>\u5728\u6267\u884C <code>ios::sync_with_stdio(false);</code> \u540E\u6DF7\u7528 <code>scanf/printf</code> \u548C <code>std::cin/std::cout</code> \u4E24\u79CD IO\uFF0C\u5BFC\u81F4\u8F93\u5165/\u8F93\u51FA\u9519\u4E71\u3002</p><ul><li><p>\u793A\u4F8B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u8FD9\u4E2A\u4F8B\u5B50\u5C06\u8BF4\u660E\u5173\u95ED\u4E0E stdio \u7684\u540C\u6B65\u540E\uFF0C\u6DF7\u7528\u4E24\u79CD IO \u65B9\u5F0F\u7684\u540E\u679C</span>
<span class="token comment">// \u5EFA\u8BAE\u5355\u6B65\u8FD0\u884C\u6765\u89C2\u5BDF\u6548\u679C</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5173\u95ED\u540C\u6B65\u540E\uFF0Ccin/cout \u5C06\u4F7F\u7528\u72EC\u7ACB\u7F13\u51B2\u533A\uFF0C\u800C\u4E0D\u662F\u5C06\u8F93\u51FA\u540C\u6B65\u81F3 scanf/printf</span>
  <span class="token comment">// \u7684\u7F13\u51B2\u533A\uFF0C\u4ECE\u800C\u51CF\u5C11 IO \u8017\u65F6</span>
  std<span class="token double-colon punctuation">::</span>ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// cout \u4E0B\uFF0C\u4F7F\u7528&#39;\\n&#39;\u6362\u884C\u65F6\uFF0C\u5185\u5BB9\u4F1A\u88AB\u7F13\u51B2\u800C\u4E0D\u4F1A\u88AB\u7ACB\u523B\u8F93\u51FA</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;a\\n&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// printf \u7684 &#39;\\n&#39; \u4F1A\u5237\u65B0 printf \u7684\u7F13\u51B2\u533A\uFF0C\u5BFC\u81F4\u8F93\u51FA\u9519\u4F4D</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;b\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;c\\n&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// \u7A0B\u5E8F\u7ED3\u675F\u65F6\uFF0Ccout \u7684\u7F13\u51B2\u533A\u624D\u4F1A\u88AB\u8F93\u51FA</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u7279\u522B\u7684\uFF0C\u4E5F\u4E0D\u80FD\u5728\u6267\u884C <code>ios::sync_with_stdio(false);</code> \u540E\u4F7F\u7528 <code>freopen</code>\u3002</p></li></ul></li>`,6),W=n("li",null,[n("p",null,"\u7531\u4E8E\u5B8F\u7684\u5C55\u5F00\uFF0C\u4E14\u672A\u52A0\u62EC\u53F7\u5BFC\u81F4\u7684\u9519\u8BEF\u3002"),n("ul",null,[n("li",null,[n("p",null,[s("\u793A\u4F8B\uFF1A\u8BE5\u5B8F\u8FD4\u56DE\u7684\u503C\u5E76\u975E "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msup",null,[n("mn",null,"4"),n("mn",null,"2")]),n("mo",null,"="),n("mn",null,"16")]),n("annotation",{encoding:"application/x-tex"},"4^2 = 16")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8141em"}}),n("span",{class:"mord"},[n("span",{class:"mord"},"4"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8141em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"16")])])]),s("\u800C\u662F"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"2"),n("mo",null,"+"),n("mn",null,"2"),n("mo",null,"\xD7"),n("mn",null,"2"),n("mo",null,"+"),n("mn",null,"2"),n("mo",null,"="),n("mn",null,"8")]),n("annotation",{encoding:"application/x-tex"},"2+2\\times 2+2 = 8")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"8")])])]),s(" \u3002")]),n("div",{class:"language-cpp ext-cpp line-numbers-mode"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"define"),s(),n("span",{class:"token macro-name function"},"square"),n("span",{class:"token expression"},[n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(" x"),n("span",{class:"token operator"},"*"),s(" x")])]),s(`
`),n("span",{class:"token function"},"printf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"%d"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"square"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])])])])],-1),L=n("p",null,[s("\u54C8\u5E0C\u7684\u65F6\u5019\u6CA1\u6709\u4F7F\u7528 "),n("code",null,"unsigned"),s(" \u5BFC\u81F4\u7684\u8FD0\u7B97\u9519\u8BEF\u3002")],-1),I=s("\u5BF9\u8D1F\u6570\u7684\u53F3\u79FB\u8FD0\u7B97\u4F1A\u5728\u6700\u9AD8\u4F4D\u8865 1\u3002\u53C2\u89C1\uFF1A"),C={href:"http://faioj.brynhild.online/wiki/OI-Wiki/math/bit/",target:"_blank",rel:"noopener noreferrer"},T=s("\u4F4D\u8FD0\u7B97"),B=a(`<li><p>\u6CA1\u6709\u5220\u9664\u6216\u6CE8\u91CA\u6389\u8C03\u8BD5\u8F93\u51FA\u8BED\u53E5\u3002</p></li><li><p>\u8BEF\u52A0\u4E86 <code>;</code>\u3002</p><ul><li>\u793A\u4F8B\uFF1A<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">/* clang-format off */</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;OI Wiki!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u54E8\u5175\u503C\u8BBE\u7F6E\u9519\u8BEF\u3002\u4F8B\u5982\uFF0C\u5E73\u8861\u6811\u7684 <code>0</code> \u8282\u70B9\u3002</p></li>`,3),j=n("p",null,[s("\u5728\u7C7B\u6216\u7ED3\u6784\u4F53\u7684\u6784\u9020\u51FD\u6570\u4E2D\u4F7F\u7528 "),n("code",null,":"),s(" \u521D\u59CB\u5316\u53D8\u91CF\u65F6\uFF0C\u53D8\u91CF\u58F0\u660E\u987A\u5E8F\u4E0D\u7B26\u5408\u521D\u59CB\u5316\u65F6\u5019\u7684\u4F9D\u8D56\u5173\u7CFB\u3002")],-1),A=s("\u6210\u5458\u53D8\u91CF\u7684\u521D\u59CB\u5316\u987A\u5E8F\u4E0E\u5B83\u4EEC\u5728\u7C7B\u4E2D\u58F0\u660E\u7684\u987A\u5E8F\u6709\u5173\uFF0C\u800C\u4E0E\u521D\u59CB\u5316\u5217\u8868\u4E2D\u7684\u987A\u5E8F\u65E0\u5173\u3002\u53C2\u89C1\uFF1A"),F={href:"https://zh.cppreference.com/w/cpp/language/constructor",target:"_blank",rel:"noopener noreferrer"},N=s("\u6784\u9020\u51FD\u6570\u4E0E\u6210\u5458\u521D\u59CB\u5316\u5668\u5217\u8868"),R=s(" \u7684\u201C\u521D\u59CB\u5316\u987A\u5E8F\u201D"),V=a(`<li><p>\u793A\u4F8B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
 <span class="token keyword">public</span><span class="token operator">:</span>
  <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>

  <span class="token comment">// a \u5C06\u5728 b \u524D\u521D\u59CB\u5316\uFF0C\u5176\u503C\u4E0D\u786E\u5B9A</span>
  <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">b</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">a</span><span class="token punctuation">(</span>b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Foo <span class="token function">bar</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> bar<span class="token punctuation">.</span>a <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span> <span class="token operator">&lt;&lt;</span> bar<span class="token punctuation">.</span>b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53EF\u80FD\u7684\u8F93\u51FA\u7ED3\u679C\uFF1A-858993459 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),S=a(`<li><p>\u5E76\u67E5\u96C6\u5408\u5E76\u96C6\u5408\u65F6\u6CA1\u6709\u628A\u4E24\u4E2A\u5143\u7D20\u7684\u7956\u5148\u5408\u5E76\u3002</p><ul><li><p>\u793A\u4F8B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>f<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">;</span>              <span class="token comment">// \u9519\u8BEF</span>
f<span class="token punctuation">[</span><span class="token function">find</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6B63\u786E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li>`,1),z=n("h4",{id:"\u6362\u884C\u7B26\u4E0D\u540C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6362\u884C\u7B26\u4E0D\u540C","aria-hidden":"true"},"#"),s(" \u6362\u884C\u7B26\u4E0D\u540C")],-1),J={class:"custom-container warning"},H=n("p",{class:"custom-container-title"},"\u6CE8\u610F",-1),U=n("p",null,"\u5728\u6B63\u5F0F\u6BD4\u8D5B\u4E2D\u4F1A\u5C3D\u91CF\u4FDD\u8BC1\u9009\u624B\u7B54\u9898\u7684\u73AF\u5883\u548C\u6700\u7EC8\u6D4B\u8BD5\u7684\u73AF\u5883\u76F8\u540C\u3002",-1),Y=s("\u672C\u8282\u5185\u5BB9\u4EC5\u9002\u7528\u4E8E\u6A21\u62DF\u8D5B\u7B49\u60C5\u51B5\uFF0C\u800C\u6211\u4EEC\u4E5F\u5EFA\u8BAE\u51FA\u9898\u4EBA\u5C3D\u91CF\u8BA9\u6570\u636E\u7B26\u5408 "),D={href:"http://faioj.brynhild.online/wiki/OI-Wiki/contest/problemsetting/#_29",target:"_blank",rel:"noopener noreferrer"},X=s("\u6570\u636E\u683C\u5F0F"),G=s("\u3002"),K=a("<p>:::</p><p>\u4E0D\u540C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u4F7F\u7528\u4E0D\u540C\u7684\u7B26\u53F7\u6765\u6807\u8BB0\u6362\u884C\uFF0C\u4EE5\u4E0B\u4E3A\u51E0\u79CD\u5E38\u7528\u7CFB\u7EDF\u7684\u6362\u884C\u7B26\uFF1A</p><ul><li>LF\uFF08\u7528 <code>\\n</code> \u8868\u793A\uFF09\uFF1A<code>Unix</code> \u6216 <code>Unix</code> \u517C\u5BB9\u7CFB\u7EDF</li><li>CR+LF\uFF08\u7528 <code>\\r\\n</code> \u8868\u793A\uFF09\uFF1A<code>Windows</code></li><li>CR\uFF08\u7528 <code>\\r</code> \u8868\u793A\uFF09\uFF1A<code>Mac OS</code> \u81F3\u7248\u672C 9</li></ul><p>\u800C C/C++ \u5229\u7528\u8F6C\u4E49\u5E8F\u5217 <code>\\n</code> \u6765\u6362\u884C\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u5BFC\u81F4\u6211\u4EEC\u8BA4\u4E3A\u8F93\u5165\u4E2D\u7684\u6362\u884C\u7B26\u4E5F\u4E00\u5B9A\u662F\u7531 <code>\\n</code> \u6765\u8868\u793A\uFF0C\u800C\u53EA\u8BFB\u5165\u4E86\u4E00\u4E2A\u5B57\u7B26\u6765\u4EE3\u8868\u6362\u884C\u7B26\uFF0C\u8FD9\u5C31\u4F1A\u5BFC\u81F4\u6211\u4EEC\u6CA1\u6709\u5B8C\u5168\u8BFB\u5165\u8F93\u5165\u6587\u4EF6\u3002</p><p>\u4EE5\u4E0B\u4E3A\u89E3\u51B3\u65B9\u6848\uFF1A</p><ul><li>\u591A\u6B21 <code>getchar()</code>\uFF0C\u76F4\u5230\u8BFB\u5230\u60F3\u8981\u7684\u5B57\u7B26\u4E3A\u6B62\u3002</li><li>\u4F7F\u7528 <code>cin</code> \u8BFB\u5165\uFF0C<strong>\u8FD9\u53EF\u80FD\u4F1A\u589E\u5927\u4EE3\u7801\u5E38\u6570</strong>\u3002</li><li>\u4F7F\u7528 <code>scanf(&quot;%s&quot;,str)</code> \u8BFB\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u53D6 <code>str[0]</code> \u4F5C\u4E3A\u8BFB\u5165\u7684\u5B57\u7B26\u3002</li><li>\u4F7F\u7528 <code>scanf(&quot; %c&quot;,&amp;c)</code> \u8FC7\u6EE4\u6389\u6240\u6709\u7A7A\u767D\u5B57\u7B26\u3002</li></ul>",6),P={id:"\u4F1A\u5BFC\u81F4\u672A\u77E5\u7684\u7ED3\u679C\xB6",tabindex:"-1"},Q=n("a",{class:"header-anchor",href:"#\u4F1A\u5BFC\u81F4\u672A\u77E5\u7684\u7ED3\u679C\xB6","aria-hidden":"true"},"#",-1),Z=s(" \u4F1A\u5BFC\u81F4\u672A\u77E5\u7684\u7ED3\u679C"),$={href:"http://faioj.brynhild.online/wiki/OI-Wiki/contest/common-mistakes/#_2",target:"_blank",rel:"noopener noreferrer"},nn=s("\xB6"),sn=a(`<p>\u672A\u5B9A\u4E49\u884C\u4E3A\u4F1A\u5BFC\u81F4\u672A\u77E5\u7684\u7ED3\u679C\uFF0C\u53EF\u80FD\u662F WA\uFF0CRE \u7B49\u3002</p><ul><li><p>\u9664\u4EE5 0\uFF08\u6C42 0 \u7684\u9006\u5143\uFF09</p><div class="custom-container warning"><p class="custom-container-title">\u793A\u4F8B</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code>cout <span class="token operator">&lt;&lt;</span> x <span class="token operator">/</span> <span class="token number">0</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div></li><li><p>\u6570\u7EC4\uFF08\u4E0B\u6807\uFF09\u8D8A\u754C</p></li><li><p>\u4F8B\u5982\uFF1A</p><ul><li><p>\u672A\u6B63\u786E\u8BBE\u7F6E\u5FAA\u73AF\u7684\u521D\u503C\u5BFC\u81F4\u8BBF\u95EE\u4E86\u4E0B\u6807\u4E3A -1 \u7684\u503C\u3002</p></li><li><p>\u65E0\u5411\u56FE\u8FB9\u8868\u672A\u5F00 2 \u500D\u3002</p></li><li><p>\u7EBF\u6BB5\u6811\u672A\u5F00 4 \u500D\u7A7A\u95F4\u3002</p></li><li><p>\u770B\u9519\u6570\u636E\u8303\u56F4\uFF0C\u5C11\u6253\u4E00\u4E2A\u96F6\u3002</p></li><li><p>\u9519\u8BEF\u9884\u4F30\u4E86\u7B97\u6CD5\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u3002</p></li><li><p>\u5199\u7EBF\u6BB5\u6811\u7684\u65F6\u5019\uFF0C<code>pushup</code> \u6216 <code>pushdown</code> \u53F6\u8282\u70B9\u3002</p><p>\u6B63\u786E\u7684\u505A\u6CD5\uFF1A\u4E0D\u8981\u8D8A\u754C\uFF0C\u8BB0\u5F97\u68C0\u67E5\u81EA\u5DF1\u7684\u4EE3\u7801\uFF0C\u4F7F\u5F97\u4E0B\u6807\u8BBF\u95EE\u6570 <code>x</code>\uFF0C\u5728\u5B9A\u4E49\u7684\u4E0B\u6807\u4E2D\u3002</p></li></ul></li><li><p>\u9664 main \u5916\u6709\u8FD4\u56DE\u503C\u51FD\u6570\u6267\u884C\u81F3\u7ED3\u5C3E\u672A\u6267\u884C\u4EFB\u4F55 return \u8BED\u53E5</p><p>\u5373\u4F7F\u6709\u4E00\u4E2A\u5206\u652F\u6709\u8FD4\u56DE\u503C\uFF0C\u4F46\u662F\u5176\u4ED6\u5206\u652F\u5374\u6CA1\u6709\uFF0C\u7ED3\u679C\u4E5F\u662F\u672A\u5B9A\u4E49\u7684\u3002</p><p>\u53EF\u4EE5\u5F00 <code>-Wall</code> \u9009\u9879\uFF0C\u770B\u4E00\u770B\u81EA\u5DF1\u6709\u6CA1\u6709\u5173\u4E8E\u51FD\u6570\u672A return \u7684\u8B66\u544A\u3002</p></li><li><p>\u5C1D\u8BD5\u4FEE\u6539\u5B57\u7B26\u4E32\u5B57\u9762\u91CF</p><div class="custom-container warning"><p class="custom-container-title">\u793A\u4F8B</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">char</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token string">&quot;OI-wiki&quot;</span><span class="token punctuation">;</span>
p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;o&#39;</span><span class="token punctuation">;</span>
p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;i&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>\u8FD9\u6837\u5B9A\u4E49\u5E76\u4E0D\u7B26\u5408 c++11 \u6807\u51C6\uFF0C\u8FCE\u4E39\u4F7F\u7528\u5176\u4ED6 <strong>\u5408\u9002</strong> \u7684\u6570\u636E\u7C7B\u578B\uFF0C\u4F8B\u5982 <code>std::string</code>,<code>char[]</code>\u3002</p></li><li><p>\u591A\u6B21\u91CA\u653E/\u975E\u6CD5\u89E3\u5F15\u7528\u4E00\u7247\u5185\u5B58</p><p>\u4F8B\u5982\uFF1A</p><ul><li><p>\u672A\u521D\u59CB\u5316\u5C31\u89E3\u5F15\u7528\u6307\u9488\u3002</p></li><li><p>\u6307\u9488\u6307\u5411\u7684\u5185\u5B58\u533A\u57DF\u5DF2\u7ECF\u91CA\u653E\u3002</p><p>\u4F7F\u7528 <code>erase</code> \u6216 <code>delete</code> \u6216 <code>free</code> \u64CD\u4F5C\u5E94\u6CE8\u610F\u4E0D\u8981\u5BF9\u540C\u4E00\u5730\u5740/\u5BF9\u8C61\u591A\u6B21\u4F7F\u7528\u3002</p></li></ul></li><li><p>\u89E3\u5F15\u7528\u7A7A\u6307\u9488/\u91CE\u6307\u9488</p><p>\u5BF9\u4E8E\u7A7A\u6307\u9488\uFF1A\u5148\u5E94\u8BE5\u5224\u65AD\u7A7A\u6307\u9488\uFF0C\u53EF\u4EE5\u7528 <code>p == nullptr</code> \u6216 <code>!p</code>\u3002</p><p>\u5BF9\u4E8E\u91CE\u6307\u9488\uFF1A\u53EF\u4EE5\u91CA\u653E\u6307\u9488\u7684\u65F6\u5019\u5C06\u5176\u7F6E\u4E3A <code>nullptr</code> \u4EE5\u89C4\u907F\u3002</p></li><li><p>\u6709\u7B26\u53F7\u6570\u6EA2\u51FA</p><p>\u4F8B\u5982\u6211\u4EEC\u6709\u4E00\u4E2A\u8868\u8FBE\u5F0F <code>x+1 &gt; x</code>\u3002</p><p>\u6B63\u5E38\u8F93\u51FA\u5E94\u5F53\u662F <code>true</code>\uFF0C\u4F46\u662F\u5728 <code>INT_MAX</code> \u4F5C\u4E3A <code>x</code> \u65F6\u8F93\u51FA <code>false</code>\uFF0C\u8FD9\u65F6\u79F0\u4E3A <code>signed integer overflow</code>\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528\u66F4\u5927\u7684\u6570\u636E\u7C7B\u578B\uFF08\u4F8B\u5982 <code>long long</code> \u6216 <code>__int128</code>\uFF09\uFF0C\u6216\u5224\u65AD\u6EA2\u51FA\u3002\u82E5\u4FDD\u8BC1\u65E0\u8D1F\u6570\uFF0C\u4EA6\u53EF\u4F7F\u7528\u65E0\u7B26\u53F7\u6574\u578B\u3002</p><h3 id="\u4F1A\u5BFC\u81F4-re" tabindex="-1"><a class="header-anchor" href="#\u4F1A\u5BFC\u81F4-re" aria-hidden="true">#</a> \u4F1A\u5BFC\u81F4 RE</h3></li><li><p>\u6CA1\u5220\u6587\u4EF6\u64CD\u4F5C\uFF08\u67D0\u4E9B OJ\uFF09\u3002</p></li><li><p>\u6392\u5E8F\u65F6\u6BD4\u8F83\u51FD\u6570\u7684\u9519\u8BEF <code>std::sort</code> \u8981\u6C42\u6BD4\u8F83\u51FD\u6570\u662F\u4E25\u683C\u5F31\u5E8F\uFF1A<code>a&lt;a</code> \u4E3A <code>false</code>\uFF1B\u82E5 <code>a&lt;b</code> \u4E3A <code>true</code>\uFF0C\u5219 <code>b&lt;a</code> \u4E3A <code>false</code>\uFF1B\u82E5 <code>a&lt;b</code> \u4E3A <code>true</code> \u4E14 <code>b&lt;c</code> \u4E3A <code>true</code>\uFF0C\u5219 <code>a&lt;c</code> \u4E3A <code>true</code>\u3002\u5176\u4E2D\u8981\u7279\u522B\u6CE8\u610F\u7B2C\u4E8C\u70B9\u3002 \u5982\u679C\u4E0D\u6EE1\u8DB3\u4E0A\u8FF0\u8981\u6C42\uFF0C\u6392\u5E8F\u65F6\u5F88\u53EF\u80FD\u4F1A RE\u3002 \u4F8B\u5982\uFF0C\u7F16\u5199\u83AB\u961F\u7684\u5947\u5076\u6027\u6392\u5E8F\u65F6\uFF0C\u8FD9\u6837\u5199\u662F\u9519\u8BEF\u7684\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>block<span class="token punctuation">[</span>a<span class="token punctuation">.</span>l<span class="token punctuation">]</span> <span class="token operator">==</span> block<span class="token punctuation">[</span>b<span class="token punctuation">.</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>block<span class="token punctuation">[</span>a<span class="token punctuation">.</span>l<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>r <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    <span class="token keyword">return</span> block<span class="token punctuation">[</span>a<span class="token punctuation">.</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;</span> block<span class="token punctuation">[</span>b<span class="token punctuation">.</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u4E2D <code>(block[a.l]&amp;1)^(a.r&lt;b.r)</code> \u4E0D\u6EE1\u8DB3\u4E0A\u8FF0\u8981\u6C42\u7684\u7B2C\u4E8C\u70B9\u3002 \u6539\u6210\u8FD9\u6837\u5C31\u6B63\u786E\u4E86\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>block<span class="token punctuation">[</span>a<span class="token punctuation">.</span>l<span class="token punctuation">]</span> <span class="token operator">==</span> block<span class="token punctuation">[</span>b<span class="token punctuation">.</span>l<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment">// \u9519\u8BEF\uFF1A\u4E0D\u6EE1\u8DB3\u4E25\u683C\u5F31\u5E8F\u7684\u8981\u6C42</span>
    <span class="token comment">// return (block[a.l] &amp; 1) ^ (a.r &lt; b.r);</span>
    <span class="token comment">// \u6B63\u786E</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>block<span class="token punctuation">[</span>a<span class="token punctuation">.</span>l<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>r <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>r<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>r <span class="token operator">&gt;</span> b<span class="token punctuation">.</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    <span class="token keyword">return</span> block<span class="token punctuation">[</span>a<span class="token punctuation">.</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;</span> block<span class="token punctuation">[</span>b<span class="token punctuation">.</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F1A\u5BFC\u81F4-tle" tabindex="-1"><a class="header-anchor" href="#\u4F1A\u5BFC\u81F4-tle" aria-hidden="true">#</a> \u4F1A\u5BFC\u81F4 TLE</h3></li><li><p>\u5206\u6CBB\u672A\u5224\u8FB9\u754C\u5BFC\u81F4\u6B7B\u9012\u5F52\u3002</p></li><li><p>\u6B7B\u5FAA\u73AF\u3002</p><ul><li>\u5FAA\u73AF\u53D8\u91CF\u91CD\u540D\u3002</li><li>\u5FAA\u73AF\u65B9\u5411\u53CD\u4E86\u3002</li></ul></li><li><p>BFS \u65F6\u4E0D\u6807\u8BB0\u67D0\u4E2A\u72B6\u6001\u662F\u5426\u5DF2\u8BBF\u95EE\u8FC7\u3002</p></li><li><p>\u4F7F\u7528\u5B8F\u5C55\u5F00\u7F16\u5199 min/max</p><p>\u8FD9\u79CD\u9519\u8BEF\u4F1A\u5927\u5927\u589E\u52A0\u7A0B\u5E8F\u7684\u8FD0\u884C\u65F6\u95F4\uFF0C\u751A\u81F3\u76F4\u63A5\u5F71\u54CD\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u3002\u5728\u521D\u5B66\u8005\u5199\u7EBF\u6BB5\u6811\u65F6\u5C24\u4E3A\u591A\u89C1\u3002</p><p>\u5E38\u89C1\u7684\u9519\u8BEF\u5199\u6CD5\u662F\u8FD9\u6837\u7684\uFF1A</p></li></ul><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">Min</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">Max</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u5199\u867D\u7136\u5728\u6B63\u786E\u6027\u4E0A\u6CA1\u6709\u95EE\u9898\uFF0C\u4F46\u662F\u5982\u679C\u76F4\u63A5\u5BF9\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u53D6 max\uFF0C\u5982 <code>a = Max(func1(), func2())</code>\uFF0C\u800C\u8FD9\u4E2A\u51FD\u6570\u7684\u8FD0\u884C\u65F6\u95F4\u8F83\u957F\uFF0C\u5219\u4F1A\u5927\u5927\u5F71\u54CD\u7A0B\u5E8F\u7684\u6027\u80FD\uFF0C\u56E0\u4E3A\u5B8F\u5C55\u5F00\u540E\u662F <code>a = func1() &gt; func2() ? func1() : func2()</code> \u7684\u5F62\u5F0F\uFF0C\u8C03\u7528\u4E86\u4E09\u6B21\u51FD\u6570\uFF0C\u6BD4\u6B63\u5E38\u7684 max \u51FD\u6570\u591A\u8C03\u7528\u4E86\u4E00\u6B21\u3002\u6CE8\u610F\uFF0C\u5982\u679C <code>func1()</code> \u6BCF\u6B21\u8FD4\u56DE\u7684\u7B54\u6848\u4E0D\u4E00\u6837\uFF0C\u8FD8\u4F1A\u5BFC\u81F4\u8FD9\u79CD <code>max</code> \u7684\u5199\u6CD5\u51FA\u73B0\u9519\u8BEF\u3002\u4F8B\u5982 <code>func1()</code> \u4E3A <code>return ++a;</code> \u800C <code>a</code> \u4E3A\u5168\u5C40\u53D8\u91CF\u7684\u60C5\u51B5\u3002</p>`,4),an=n("p",null,[s("\u793A\u4F8B\uFF1A\u5982\u4E0B\u4EE3\u7801\u4F1A\u88AB\u5361\u5230\u5355\u6B21\u67E5\u8BE2 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",{mathvariant:"normal"},"\u0398"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"\\Theta(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"\u0398"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" \u5BFC\u81F4 TLE\u3002")],-1),tn=a(`<div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">max</span><span class="token expression"><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span>

<span class="token keyword">int</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> ql<span class="token punctuation">,</span> <span class="token keyword">int</span> qr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ql <span class="token operator">&lt;=</span> l <span class="token operator">&amp;&amp;</span> qr <span class="token operator">&gt;=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">++</span>ti<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BB0\u5F55\u7ED3\u70B9\u8BBF\u95EE\u6B21\u6570\u65B9\u4FBF\u8C03\u8BD5</span>
    <span class="token keyword">return</span> vi<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">&gt;=</span> qr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token function">lt</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> ql<span class="token punctuation">,</span> qr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">&lt;</span> ql<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token function">rt</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> ql<span class="token punctuation">,</span> qr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token function">lt</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> ql<span class="token punctuation">,</span> qr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token function">rt</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> ql<span class="token punctuation">,</span> qr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),pn=n("ul",null,[n("li",null,[n("p",null,"\u6CA1\u5220\u6587\u4EF6\u64CD\u4F5C\uFF08\u67D0\u4E9B OJ\uFF09\u3002")]),n("li",null,[n("p",null,[s("\u5728 "),n("code",null,"for/while"),s(" \u5FAA\u73AF\u4E2D\u91CD\u590D\u6267\u884C\u590D\u6742\u5EA6\u975E"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])]),s(" \u7684\u51FD\u6570\u3002\u4E25\u683C\u6765\u8BF4\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u5F15\u8D77\u65F6\u95F4\u590D\u6742\u5EA6\u7684\u6539\u53D8\u3002")])])],-1),en=a(`<h3 id="\u4F1A\u5BFC\u81F4-mle" tabindex="-1"><a class="header-anchor" href="#\u4F1A\u5BFC\u81F4-mle" aria-hidden="true">#</a> \u4F1A\u5BFC\u81F4 MLE</h3><ul><li>\u6570\u7EC4\u8FC7\u5927\u3002</li><li>STL \u5BB9\u5668\u4E2D\u63D2\u5165\u4E86\u8FC7\u591A\u7684\u5143\u7D20\u3002 <ul><li>\u7ECF\u5E38\u662F\u5728\u4E00\u4E2A\u4F1A\u5411 STL \u63D2\u5165\u5143\u7D20\u7684\u5FAA\u73AF\u4E2D\u6B7B\u5FAA\u73AF\u4E86\u3002</li><li>\u4E5F\u6709\u53EF\u80FD\u88AB\u5361\u4E86\u3002</li></ul></li></ul><h3 id="\u4F1A\u5BFC\u81F4\u5E38\u6570\u8FC7\u5927" tabindex="-1"><a class="header-anchor" href="#\u4F1A\u5BFC\u81F4\u5E38\u6570\u8FC7\u5927" aria-hidden="true">#</a> \u4F1A\u5BFC\u81F4\u5E38\u6570\u8FC7\u5927</h3><ul><li><p>\u5B9A\u4E49\u6A21\u6570\u7684\u65F6\u5019\uFF0C\u672A\u5B9A\u4E49\u4E3A\u5E38\u91CF\u3002</p><ul><li><p>\u793A\u4F8B\uFF1A</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// int mod = 998244353;      // \u9519\u8BEF</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> mod <span class="token operator">=</span> <span class="token number">998244353</span><span class="token punctuation">;</span>  <span class="token comment">// \u6B63\u786E\uFF0C\u65B9\u4FBF\u7F16\u8BD1\u5668\u6309\u5E38\u91CF\u5904\u7406</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u4F7F\u7528\u4E86\u4E0D\u5FC5\u8981\u7684\u9012\u5F52\uFF08\u5C3E\u9012\u5F52\u4E0D\u5728\u6B64\u5217\uFF09\u3002</p></li><li><p>\u5C06\u9012\u5F52\u8F6C\u5316\u6210\u8FED\u4EE3\u7684\u65F6\u5019\uFF0C\u5F15\u5165\u4E86\u5927\u91CF\u989D\u5916\u8FD0\u7B97\u3002</p></li></ul><h3 id="\u53EA\u5728\u7A0B\u5E8F\u5728\u672C\u5730\u8FD0\u884C\u7684\u65F6\u5019\u9020\u6210\u5F71\u54CD\u7684\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u53EA\u5728\u7A0B\u5E8F\u5728\u672C\u5730\u8FD0\u884C\u7684\u65F6\u5019\u9020\u6210\u5F71\u54CD\u7684\u9519\u8BEF" aria-hidden="true">#</a> \u53EA\u5728\u7A0B\u5E8F\u5728\u672C\u5730\u8FD0\u884C\u7684\u65F6\u5019\u9020\u6210\u5F71\u54CD\u7684\u9519\u8BEF</h3><ul><li>\u6587\u4EF6\u64CD\u4F5C\u6709\u53EF\u80FD\u4F1A\u53D1\u751F\u7684\u9519\u8BEF\uFF1A <ul><li>\u5BF9\u62CD\u65F6\u672A\u5173\u95ED\u6587\u4EF6\u6307\u9488 <code>fclose(fp)</code> \u5C31\u53C8\u4EE4 <code>fp = fopen()</code>\u3002\u8FD9\u4F1A\u4F7F\u5F97\u8FDB\u7A0B\u51FA\u73B0\u5927\u91CF\u7684\u6587\u4EF6\u91CE\u6307\u9488\u3002</li><li><code>freopen()</code> \u4E2D\u7684\u6587\u4EF6\u540D\u672A\u52A0 <code>.in</code>/<code>.out</code>\u3002</li></ul></li><li>\u4F7F\u7528\u5806\u7A7A\u95F4\u540E\u5FD8\u8BB0 <code>delete</code> \u6216 <code>free</code>\u3002</li></ul>`,6);function on(cn,ln){const t=l("ExternalLinkIcon");return o(),c("div",null,[u,n("div",r,[d,n("p",null,[k,n("a",m,[v,p(t)]),h]),b,g,n("p",null,[n("a",f,[_,p(t)])]),y,n("p",null,[w,n("a",x,[q,p(t)]),E])]),M,n("ul",null,[O,W,n("li",null,[L,n("ul",null,[n("li",null,[I,n("a",C,[T,p(t)])])])]),B,n("li",null,[j,n("ul",null,[n("li",null,[n("p",null,[A,n("a",F,[N,p(t)]),R])]),V])]),S]),z,n("div",J,[H,U,n("p",null,[Y,n("a",D,[X,p(t)]),G]),K,n("h3",P,[Q,Z,n("a",$,[nn,p(t)])]),sn,an,tn,pn,en])])}var dn=e(i,[["render",on],["__file","common-mistakes.html.vue"]]);export{dn as default};
