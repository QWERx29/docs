import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{o as i,c as u,a as n,b as a,w as o,d as s,e,r as c}from"./app.6d7cb999.js";const r={},k=n("h1",{id:"a",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#a","aria-hidden":"true"},"#"),s(" A*")],-1),m=n("p",null,"\u672C\u9875\u9762\u5C06\u7B80\u8981\u4ECB\u7ECD A*\u7B97\u6CD5\u3002",-1),d=n("h2",{id:"\u7B80\u4ECB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B80\u4ECB","aria-hidden":"true"},"#"),s(" \u7B80\u4ECB")],-1),h=s("A*\u641C\u7D22\u7B97\u6CD5\uFF08\u82F1\u6587\uFF1AA*search algorithm\uFF0CA*\u8BFB\u4F5C A-star\uFF09\uFF0C\u7B80\u79F0 A*\u7B97\u6CD5\uFF0C\u662F\u4E00\u79CD\u5728\u56FE\u5F62\u5E73\u9762\u4E0A\uFF0C\u5BF9\u4E8E\u6709\u591A\u4E2A\u8282\u70B9\u7684\u8DEF\u5F84\u6C42\u51FA\u6700\u4F4E\u901A\u8FC7\u6210\u672C\u7684\u7B97\u6CD5\u3002\u5B83\u5C5E\u4E8E\u56FE\u904D\u5386\uFF08\u82F1\u6587\uFF1AGraph traversal\uFF09\u548C\u6700\u4F73\u4F18\u5148\u641C\u7D22\u7B97\u6CD5\uFF08\u82F1\u6587\uFF1ABest-first search\uFF09\uFF0C\u4EA6\u662F "),v=s("BFS"),x=s(" \u7684\u6539\u8FDB\u3002"),w=n("p",null,[s("\u5B9A\u4E49\u8D77\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"s")]),n("annotation",{encoding:"application/x-tex"},"s")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"s")])])]),s("\uFF0C\u7EC8\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s("\uFF0C\u4ECE\u8D77\u70B9\uFF08\u521D\u59CB\u72B6\u6001\uFF09\u5F00\u59CB\u7684\u8DDD\u79BB\u51FD\u6570 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"g"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"g(x)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")")])])]),s("\uFF0C\u5230\u7EC8\u70B9\uFF08\u6700\u7EC8\u72B6\u6001\uFF09\u7684\u8DDD\u79BB\u51FD\u6570 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"h(x)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")")])])]),s("\uFF0C"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msup",null,[n("mi",null,"h"),n("mo",{lspace:"0em",rspace:"0em"},"\u2217")]),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"h^{\\ast}(x)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"h"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.6887em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"\u2217")])])])])])])])]),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")")])])]),n("sup",{class:"footnote-ref"},[n("a",{href:"#footnote1"},"[1]"),n("a",{class:"footnote-anchor",id:"footnote-ref1"})]),s("\uFF0C\u4EE5\u53CA\u6BCF\u4E2A\u70B9\u7684\u4F30\u4EF7\u51FD\u6570 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")"),n("mo",null,"="),n("mi",null,"g"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")"),n("mo",null,"+"),n("mi",null,"h"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"f(x)=g(x)+h(x)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")")])])]),s("\u3002")],-1),b=n("p",null,[s("A*\u7B97\u6CD5\u6BCF\u6B21\u4ECE\u4F18\u5148\u961F\u5217\u4E2D\u53D6\u51FA\u4E00\u4E2A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f")]),n("annotation",{encoding:"application/x-tex"},"f")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),s(" \u6700\u5C0F\u7684\u5143\u7D20\uFF0C\u7136\u540E\u66F4\u65B0\u76F8\u90BB\u7684\u72B6\u6001\u3002")],-1),g=n("p",null,[s("\u5982\u679C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h"),n("mo",null,"\u2264"),n("mi",null,"h"),n("mo",null,"\u2217")]),n("annotation",{encoding:"application/x-tex"},"h\\leq h*")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8304em","vertical-align":"-0.136em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"\u2264"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mord"},"\u2217")])])]),s("\uFF0C\u5219 A*\u7B97\u6CD5\u80FD\u627E\u5230\u6700\u4F18\u89E3\u3002")],-1),y=n("p",null,[s("\u4E0A\u8FF0\u6761\u4EF6\u4E0B\uFF0C\u5982\u679C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h")]),n("annotation",{encoding:"application/x-tex"},"h")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"h")])])]),s(" \u6EE1\u8DB3\u4E09\u89D2\u5F62\u4E0D\u7B49\u5F0F\uFF0C\u5219 A*\u7B97\u6CD5\u4E0D\u4F1A\u5C06\u91CD\u590D\u7ED3\u70B9\u52A0\u5165\u961F\u5217\u3002")],-1),f=s("\u5F53 "),_=n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h"),n("mo",null,"="),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"h=0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])],-1),M=s(" \u65F6\uFF0CA*\u7B97\u6CD5\u53D8\u4E3A "),L=s("Dijkstra"),j=s("\uFF1B\u5F53 "),q=n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h"),n("mo",null,"="),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"h=0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])],-1),A=s(" \u5E76\u4E14\u8FB9\u6743\u4E3A "),z=n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])],-1),B=s(" \u65F6\u53D8\u4E3A "),E=s("BFS"),Q=s("\u3002"),F=n("h2",{id:"\u4F8B\u9898",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F8B\u9898","aria-hidden":"true"},"#"),s(" \u4F8B\u9898")],-1),I={class:"custom-container note"},C=n("p",{class:"custom-container-title"},"\u516B\u6570\u7801",-1),N=s("\u200B "),V={href:"https://www.luogu.com.cn/problem/P1379",target:"_blank",rel:"noopener noreferrer"},O=s("\u4F20\u9001\u95E8"),S=n("p",null,[s("\u200B \u9898\u76EE\u5927\u610F\uFF1A\u5728 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"3"),n("mo",null,"\xD7"),n("mn",null,"3")]),n("annotation",{encoding:"application/x-tex"},"3\\times 3")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"3"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"3")])])]),s(" \u7684\u68CB\u76D8\u4E0A\uFF0C\u6446\u6709\u516B\u4E2A\u68CB\u5B50\uFF0C\u6BCF\u4E2A\u68CB\u5B50\u4E0A\u6807\u6709 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),s(" \u81F3 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"8")]),n("annotation",{encoding:"application/x-tex"},"8")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"8")])])]),s(" \u7684\u67D0\u4E00\u6570\u5B57\u3002\u68CB\u76D8\u4E2D\u7559\u6709\u4E00\u4E2A\u7A7A\u683C\uFF0C\u7A7A\u683C\u7528 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])]),s(" \u6765\u8868\u793A\u3002\u7A7A\u683C\u5468\u56F4\u7684\u68CB\u5B50\u53EF\u4EE5\u79FB\u5230\u7A7A\u683C\u4E2D\uFF0C\u8FD9\u6837\u539F\u6765\u7684\u4F4D\u7F6E\u5C31\u4F1A\u53D8\u6210\u7A7A\u683C\u3002\u7ED9\u51FA\u4E00\u79CD\u521D\u59CB\u5E03\u5C40\u548C\u76EE\u6807\u5E03\u5C40\uFF08\u4E3A\u4E86\u4F7F\u9898\u76EE\u7B80\u5355\uFF0C\u8BBE\u76EE\u6807\u72B6\u6001\u5982\u4E0B\uFF09\uFF0C\u627E\u5230\u4E00\u79CD\u4ECE\u521D\u59CB\u5E03\u5C40\u5230\u76EE\u6807\u5E03\u5C40\u6700\u5C11\u6B65\u9AA4\u7684\u79FB\u52A8\u65B9\u6CD5\u3002")],-1),P=e(`<div class="language-plain ext-plain line-numbers-mode"><pre class="language-plain"><code>    123
    804
    765
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),R=n("div",{class:"custom-container note"},[n("p",{class:"custom-container-title"},"\u89E3\u9898\u601D\u8DEF"),n("p",null,[s("\u200B "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h")]),n("annotation",{encoding:"application/x-tex"},"h")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"h")])])]),s(" \u51FD\u6570\u53EF\u4EE5\u5B9A\u4E49\u4E3A\uFF0C\u4E0D\u5728\u5E94\u8BE5\u5728\u7684\u4F4D\u7F6E\u7684\u6570\u5B57\u4E2A\u6570\u3002")]),n("p",null,[s("\u200B \u5BB9\u6613\u53D1\u73B0 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h")]),n("annotation",{encoding:"application/x-tex"},"h")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"h")])])]),s(" \u6EE1\u8DB3\u4EE5\u4E0A\u4E24\u4E2A\u6027\u8D28\uFF0C\u6B64\u9898\u53EF\u4EE5\u4F7F\u7528 A*\u7B97\u6CD5\u6C42\u89E3\u3002")])],-1),D=e(`<details class="custom-container details"><summary>\u53C2\u8003\u4EE3\u7801</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;set&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> dx<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> dy<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> fx<span class="token punctuation">,</span> fy<span class="token punctuation">;</span>
<span class="token keyword">char</span> ch<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">matrix</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>matrix x<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> x<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> x<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> f<span class="token punctuation">,</span> st<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">h</span><span class="token punctuation">(</span>matrix a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> st<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> ret<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token class-name">node</span> <span class="token punctuation">{</span>
  matrix a<span class="token punctuation">;</span>
  <span class="token keyword">int</span> t<span class="token punctuation">;</span>

  <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>node x<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> t <span class="token operator">+</span> <span class="token function">h</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">&gt;</span> x<span class="token punctuation">.</span>t <span class="token operator">+</span> <span class="token function">h</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span> x<span class="token punctuation">;</span>

priority_queue<span class="token operator">&lt;</span>node<span class="token operator">&gt;</span> q<span class="token punctuation">;</span>  <span class="token comment">// \u641C\u7D22\u961F\u5217</span>
set<span class="token operator">&lt;</span>matrix<span class="token operator">&gt;</span> s<span class="token punctuation">;</span>           <span class="token comment">// \u9632\u6B62\u641C\u7D22\u961F\u5217\u91CD\u590D</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// \u5B9A\u4E49\u6807\u51C6\u8868</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
  st<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token comment">// \u8F93\u5165</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot; %c&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      f<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> ch <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>f<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">h</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5224\u65AD\u662F\u5426\u4E0E\u6807\u51C6\u77E9\u9635\u4E00\u81F4</span>
      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>x<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> fx <span class="token operator">=</span> i<span class="token punctuation">,</span> fy <span class="token operator">=</span> j<span class="token punctuation">;</span>  <span class="token comment">// \u5982\u679C\u8BE5\u70B9\u4E0A\u7684\u6570\u4E0D\u4E3A0</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5BF9\u56DB\u79CD\u79FB\u52A8\u65B9\u5F0F\u5206\u522B\u8FDB\u884C\u641C\u7D22</span>
      <span class="token keyword">int</span> xx <span class="token operator">=</span> fx <span class="token operator">+</span> dx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> yy <span class="token operator">=</span> fy <span class="token operator">+</span> dy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;=</span> xx <span class="token operator">&amp;&amp;</span> xx <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token number">1</span> <span class="token operator">&lt;=</span> yy <span class="token operator">&amp;&amp;</span> yy <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a<span class="token punctuation">[</span>fx<span class="token punctuation">]</span><span class="token punctuation">[</span>fy<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a<span class="token punctuation">[</span>xx<span class="token punctuation">]</span><span class="token punctuation">[</span>yy<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
          s<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>
              q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token punctuation">.</span>a<span class="token punctuation">,</span> x<span class="token punctuation">.</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8FD9\u6837\u79FB\u52A8\u540E\uFF0C\u5C06\u65B0\u7684\u60C5\u51B5\u653E\u5165\u641C\u7D22\u961F\u5217\u4E2D</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a<span class="token punctuation">[</span>fx<span class="token punctuation">]</span><span class="token punctuation">[</span>fy<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>a<span class="token punctuation">.</span>a<span class="token punctuation">[</span>xx<span class="token punctuation">]</span><span class="token punctuation">[</span>yy<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5982\u679C\u4E0D\u8FD9\u6837\u79FB\u52A8\u7684\u60C5\u51B5</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><hr>`,2),G={class:"custom-container note"},T=n("p",{class:"custom-container-title"},"k \u77ED\u8DEF",-1),W=s("\u200B "),H={href:"https://www.luogu.com.cn/problem/P2483",target:"_blank",rel:"noopener noreferrer"},J=s("\u4F20\u9001\u95E8"),K=n("p",null,[s("\u200B \u6309\u987A\u5E8F\u6C42\u4E00\u4E2A\u6709\u5411\u56FE\u4E0A\u4ECE\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"s")]),n("annotation",{encoding:"application/x-tex"},"s")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"s")])])]),s(" \u5230\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u7684\u6240\u6709\u8DEF\u5F84\u6700\u5C0F\u7684\u524D\u4EFB\u610F\u591A\uFF08\u4E0D\u59A8\u8BBE\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),s("\uFF09\u4E2A\u3002")],-1),U=n("div",{class:"custom-container note"},[n("p",{class:"custom-container-title"},"\u89E3\u9898\u601D\u8DEF"),n("p",null,"\u200B \u5F88\u5BB9\u6613\u53D1\u73B0\uFF0C\u8FD9\u4E2A\u95EE\u9898\u5F88\u5BB9\u6613\u8F6C\u5316\u6210\u7528 A*\u7B97\u6CD5\u89E3\u51B3\u95EE\u9898\u7684\u6807\u51C6\u7A0B\u5F0F\u3002"),n("p",null,[s("\u200B \u521D\u59CB\u72B6\u6001\u4E3A\u5904\u4E8E\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"s")]),n("annotation",{encoding:"application/x-tex"},"s")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"s")])])]),s("\uFF0C\u6700\u7EC8\u72B6\u6001\u4E3A\u5904\u4E8E\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s("\uFF0C\u8DDD\u79BB\u51FD\u6570\u4E3A\u4ECE "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"s")]),n("annotation",{encoding:"application/x-tex"},"s")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"s")])])]),s(" \u5230\u5F53\u524D\u7ED3\u70B9\u5DF2\u7ECF\u8D70\u8FC7\u7684\u8DDD\u79BB\uFF0C\u4F30\u4EF7\u51FD\u6570\u4E3A\u4ECE\u5F53\u524D\u7ED3\u70B9\u5230\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u81F3\u5C11\u8981\u8D70\u8FC7\u7684\u8DDD\u79BB\uFF0C\u4E5F\u5C31\u662F\u5F53\u524D\u7ED3\u70B9\u5230\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u7684\u6700\u77ED\u8DEF\u3002")]),n("p",null,[s("\u200B \u5C31\u8FD9\u6837\uFF0C\u6211\u4EEC\u5728\u9884\u5904\u7406\u7684\u65F6\u5019\u53CD\u5411\u5EFA\u56FE\uFF0C\u8BA1\u7B97\u51FA\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u5230\u6240\u6709\u70B9\u7684\u6700\u77ED\u8DEF\uFF0C\u7136\u540E\u5C06\u521D\u59CB\u72B6\u6001\u585E\u5165\u4F18\u5148\u961F\u5217\uFF0C\u6BCF\u6B21\u53D6\u51FA "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")"),n("mo",null,"="),n("mi",null,"g"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")"),n("mo",null,"+"),n("mi",null,"h"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"f(x)=g(x)+h(x)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")")])])]),s(" \u6700\u5C0F\u7684\u4E00\u9879\uFF0C\u8BA1\u7B97\u51FA\u5176\u6240\u8FDE\u7ED3\u70B9\u7684\u4FE1\u606F\u5E76\u5C06\u5176\u4E5F\u585E\u5165\u961F\u5217\u3002\u5F53\u4F60\u7B2C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),s(" \u6B21\u8D70\u5230\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u65F6\uFF0C\u4E5F\u5C31\u7B97\u51FA\u4E86\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"s")]),n("annotation",{encoding:"application/x-tex"},"s")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"s")])])]),s(" \u5230\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"t")]),n("annotation",{encoding:"application/x-tex"},"t")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6151em"}}),n("span",{class:"mord mathnormal"},"t")])])]),s(" \u7684 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),s(" \u77ED\u8DEF\u3002")]),n("p",null,[s("\u200B \u7531\u4E8E\u8BBE\u8BA1\u7684\u8DDD\u79BB\u51FD\u6570\u548C\u4F30\u4EF7\u51FD\u6570\uFF0C\u6BCF\u4E2A\u72B6\u6001\u9700\u8981\u5B58\u50A8\u4E24\u4E2A\u53C2\u6570\uFF0C\u5F53\u524D\u7ED3\u70B9 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"x")]),n("annotation",{encoding:"application/x-tex"},"x")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"x")])])]),s(" \u548C\u5DF2\u7ECF\u8D70\u8FC7\u7684\u8DDD\u79BB "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"v")]),n("annotation",{encoding:"application/x-tex"},"v")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v")])])]),s("\u3002")]),n("p",null,[s("\u200B \u6211\u4EEC\u53EF\u4EE5\u5728\u6B64\u57FA\u7840\u4E0A\u52A0\u4E00\u70B9\u5C0F\u4F18\u5316\uFF1A\u7531\u4E8E\u53EA\u9700\u8981\u6C42\u51FA\u7B2C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),s(" \u77ED\u8DEF\uFF0C\u6240\u4EE5\u5F53\u6211\u4EEC\u7B2C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k"),n("mo",null,"+"),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"k+1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),s(" \u6B21\u6216\u4EE5\u4E0A\u8D70\u5230\u8BE5\u7ED3\u70B9\u65F6\uFF0C\u76F4\u63A5\u8DF3\u8FC7\u8BE5\u72B6\u6001\u3002\u56E0\u4E3A\u524D\u9762\u7684 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),s(" \u6B21\u8D70\u5230\u8FD9\u4E2A\u70B9\u7684\u65F6\u5019\u80AF\u5B9A\u80FD\u56E0\u6B64\u6784\u9020\u51FA "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"k")]),n("annotation",{encoding:"application/x-tex"},"k")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),s(" \u6761\u8DEF\u5F84\uFF0C\u6240\u4EE5\u4E4B\u540E\u518D\u52A0\u8FB9\u66F4\u65E0\u5FC5\u8981\u3002")])],-1),X=e(`<details class="custom-container details"><summary>\u53C2\u8003\u4EE3\u7801</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> maxn <span class="token operator">=</span> <span class="token number">5010</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> maxm <span class="token operator">=</span> <span class="token number">400010</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">double</span> inf <span class="token operator">=</span> <span class="token number">2e9</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> k<span class="token punctuation">,</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> cur<span class="token punctuation">,</span> h<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">,</span> nxt<span class="token punctuation">[</span>maxm<span class="token punctuation">]</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span>maxm<span class="token punctuation">]</span><span class="token punctuation">,</span> cnt<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">,</span> ans<span class="token punctuation">;</span>
<span class="token keyword">int</span> cur1<span class="token punctuation">,</span> h1<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">,</span> nxt1<span class="token punctuation">[</span>maxm<span class="token punctuation">]</span><span class="token punctuation">,</span> p1<span class="token punctuation">[</span>maxm<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> e<span class="token punctuation">,</span> ww<span class="token punctuation">,</span> w<span class="token punctuation">[</span>maxm<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> w1<span class="token punctuation">[</span>maxm<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">bool</span> tf<span class="token punctuation">[</span>maxn<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">add_edge</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">double</span> z<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u6B63\u5411\u5EFA\u56FE\u51FD\u6570</span>
  cur<span class="token operator">++</span><span class="token punctuation">;</span>
  nxt<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>
  h<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> cur<span class="token punctuation">;</span>
  p<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>
  w<span class="token punctuation">[</span>cur<span class="token punctuation">]</span> <span class="token operator">=</span> z<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">add_edge1</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">double</span> z<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u53CD\u5411\u5EFA\u56FE\u51FD\u6570</span>
  cur1<span class="token operator">++</span><span class="token punctuation">;</span>
  nxt1<span class="token punctuation">[</span>cur1<span class="token punctuation">]</span> <span class="token operator">=</span> h1<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>
  h1<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> cur1<span class="token punctuation">;</span>
  p1<span class="token punctuation">[</span>cur1<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>
  w1<span class="token punctuation">[</span>cur1<span class="token punctuation">]</span> <span class="token operator">=</span> z<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token class-name">node</span> <span class="token punctuation">{</span>  <span class="token comment">// \u4F7F\u7528A*\u65F6\u6240\u9700\u7684\u7ED3\u6784\u4F53</span>
  <span class="token keyword">int</span> x<span class="token punctuation">;</span>
  <span class="token keyword">double</span> v<span class="token punctuation">;</span>

  <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>node a<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> v <span class="token operator">+</span> f<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">&gt;</span> a<span class="token punctuation">.</span>v <span class="token operator">+</span> f<span class="token punctuation">[</span>a<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

priority_queue<span class="token operator">&lt;</span>node<span class="token operator">&gt;</span> q<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">node2</span> <span class="token punctuation">{</span>  <span class="token comment">// \u8BA1\u7B97t\u5230\u6240\u6709\u7ED3\u70B9\u6700\u77ED\u8DEF\u65F6\u6240\u9700\u7684\u7ED3\u6784\u4F53</span>
  <span class="token keyword">int</span> x<span class="token punctuation">;</span>
  <span class="token keyword">double</span> v<span class="token punctuation">;</span>

  <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>node2 a<span class="token punctuation">)</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> v <span class="token operator">&gt;</span> a<span class="token punctuation">.</span>v<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span> x<span class="token punctuation">;</span>

priority_queue<span class="token operator">&lt;</span>node2<span class="token operator">&gt;</span> Q<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d%d%lf&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">,</span> <span class="token operator">&amp;</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>m<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d%d%lf&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>u<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ww<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">add_edge</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> ww<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u6B63\u5411\u5EFA\u56FE</span>
    <span class="token function">add_edge1</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> u<span class="token punctuation">,</span> ww<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u53CD\u5411\u5EFA\u56FE</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> inf<span class="token punctuation">;</span>
  Q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>n<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>Q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u8BA1\u7B97t\u5230\u6240\u6709\u7ED3\u70B9\u7684\u6700\u77ED\u8DEF</span>
    x <span class="token operator">=</span> Q<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tf<span class="token punctuation">[</span>x<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
    tf<span class="token punctuation">[</span>x<span class="token punctuation">.</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    f<span class="token punctuation">[</span>x<span class="token punctuation">.</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">.</span>v<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> h1<span class="token punctuation">[</span>x<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span> j<span class="token punctuation">;</span> j <span class="token operator">=</span> nxt1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> Q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>p1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>v <span class="token operator">+</span> w1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  k <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>e <span class="token operator">/</span> f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u4F7F\u7528A*\u7B97\u6CD5</span>
    node x <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cnt<span class="token punctuation">[</span>x<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>x <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e <span class="token operator">-=</span> x<span class="token punctuation">.</span>v<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      ans<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> h<span class="token punctuation">[</span>x<span class="token punctuation">.</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span> j<span class="token punctuation">;</span> j <span class="token operator">=</span> nxt<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt<span class="token punctuation">[</span>p<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> k <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>v <span class="token operator">+</span> w<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> e<span class="token punctuation">)</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>p<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span>v <span class="token operator">+</span> w<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u53C2\u8003\u8D44\u6599\u4E0E\u6CE8\u91CA" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599\u4E0E\u6CE8\u91CA" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599\u4E0E\u6CE8\u91CA</h2><hr class="footnotes-sep">`,3),Y={class:"footnotes"},Z={class:"footnotes-list"},$={id:"footnote1",class:"footnote-item"},nn=s("\u6B64\u5904\u7684 h \u610F\u4E3A heuristic\u3002\u8BE6\u89C1 "),sn={href:"https://zh.wikipedia.org/wiki/%E5%90%AF%E5%8F%91%E5%BC%8F%E6%90%9C%E7%B4%A2",target:"_blank",rel:"noopener noreferrer"},an=s("\u542F\u53D1\u5F0F\u641C\u7D22 - \u7EF4\u57FA\u767E\u79D1"),tn=s(" \u548C "),pn={href:"https://en.wikipedia.org/wiki/A*_search_algorithm#Bounded_relaxation",target:"_blank",rel:"noopener noreferrer"},on=s("A*search algorithm - Wikipedia"),en=s(" \u7684 Bounded relaxation \u4E00\u8282\u3002 "),cn=n("a",{href:"#footnote-ref1",class:"footnote-backref"},"\u21A9\uFE0E",-1);function ln(un,rn){const p=c("RouterLink"),t=c("ExternalLinkIcon");return i(),u("div",null,[k,m,d,n("p",null,[h,a(p,{to:"/zh/OI-wiki/search/bfs.html"},{default:o(()=>[v]),_:1}),x]),w,b,g,y,n("p",null,[f,_,M,a(p,{to:"/zh/OI-wiki/graph/shortest-path.html#dijkstra"},{default:o(()=>[L]),_:1}),j,q,A,z,B,a(p,{to:"/zh/OI-wiki/search/bfs.html"},{default:o(()=>[E]),_:1}),Q]),F,n("div",I,[C,n("p",null,[N,n("a",V,[O,a(t)])]),S,P]),R,D,n("div",G,[T,n("p",null,[W,n("a",H,[J,a(t)])]),K]),U,X,n("section",Y,[n("ol",Z,[n("li",$,[n("p",null,[nn,n("a",sn,[an,a(t)]),tn,n("a",pn,[on,a(t)]),en,cn])])])])])}var dn=l(r,[["render",ln],["__file","astar.html.vue"]]);export{dn as default};
