import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{o as i,c as u,a as n,b as a,w as o,d as s,e as t,r as c}from"./app.2d48c0a5.js";const r={},k=n("h1",{id:"\u56DE\u6EAF\u6CD5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u56DE\u6EAF\u6CD5","aria-hidden":"true"},"#"),s(" \u56DE\u6EAF\u6CD5")],-1),m=n("p",null,"\u672C\u9875\u9762\u5C06\u7B80\u8981\u4ECB\u7ECD\u56DE\u6EAF\u6CD5\u7684\u6982\u5FF5\u548C\u5E94\u7528\u3002",-1),d=n("h2",{id:"\u7B80\u4ECB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B80\u4ECB","aria-hidden":"true"},"#"),s(" \u7B80\u4ECB")],-1),v=s("\u56DE\u6EAF\u6CD5\u662F\u4E00\u79CD\u7ECF\u5E38\u88AB\u7528\u5728 "),h=s("\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF08DFS\uFF09"),b=s(" \u548C "),g=s("\u5E7F\u5EA6\u4F18\u5148\u641C\u7D22\uFF08BFS\uFF09"),y=s(" \u7684\u6280\u5DE7\u3002"),w=t('<p>\u5176\u672C\u8D28\u662F\uFF1A\u8D70\u4E0D\u901A\u5C31\u56DE\u5934\u3002</p><h2 id="\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> \u5DE5\u4F5C\u539F\u7406</h2><ol><li><p>\u6784\u9020\u7A7A\u95F4\u6811\uFF1B</p></li><li><p>\u8FDB\u884C\u904D\u5386\uFF1B</p></li><li><p>\u5982\u9047\u5230\u8FB9\u754C\u6761\u4EF6\uFF0C\u5373\u4E0D\u518D\u5411\u4E0B\u641C\u7D22\uFF0C\u8F6C\u800C\u641C\u7D22\u53E6\u4E00\u6761\u94FE\uFF1B</p></li><li><p>\u8FBE\u5230\u76EE\u6807\u6761\u4EF6\uFF0C\u8F93\u51FA\u7ED3\u679C\u3002</p></li></ol><h2 id="\u4F8B\u9898" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u9898" aria-hidden="true">#</a> \u4F8B\u9898</h2>',4),x={class:"custom-container note"},_=n("p",{class:"custom-container-title"},"USACO 1.5.4 Checker Challenge",-1),f=s("\u200B "),M={href:"https://www.luogu.com.cn/problem/P1219",target:"_blank",rel:"noopener noreferrer"},q=s("\u4F20\u9001\u95E8"),L=n("p",null,[s("\u200B \u73B0\u5728\u6709\u4E00\u4E2A\u5982\u4E0B\u7684 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"6"),n("mo",null,"\xD7"),n("mn",null,"6")]),n("annotation",{encoding:"application/x-tex"},"6 \\times 6")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"6"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"6")])])]),s(" \u7684\u8DF3\u68CB\u68CB\u76D8\uFF0C\u6709\u516D\u4E2A\u68CB\u5B50\u88AB\u653E\u7F6E\u5728\u68CB\u76D8\u4E0A\uFF0C\u4F7F\u5F97\u6BCF\u884C\uFF0C\u6BCF\u5217\uFF0C\u6BCF\u6761\u5BF9\u89D2\u7EBF\uFF08\u5305\u62EC\u4E24\u6761\u4E3B\u5BF9\u89D2\u7EBF\u7684\u6240\u6709\u5BF9\u89D2\u7EBF\uFF09\u4E0A\u90FD\u81F3\u591A\u6709\u4E00\u4E2A\u68CB\u5B50\u3002")],-1),z=t(`<div class="language-plain ext-plain line-numbers-mode"><pre class="language-plain"><code>0   1   2   3   4   5   6
  -------------------------
1 |   | O |   |   |   |   |
  -------------------------
2 |   |   |   | O |   |   |
  -------------------------
3 |   |   |   |   |   | O |
  -------------------------
4 | O |   |   |   |   |   |
  -------------------------
5 |   |   | O |   |   |   |
  -------------------------
6 |   |   |   |   | O |   |
  -------------------------
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),O=n("p",null,[s("\u200B \u4E0A\u9762\u7684\u5E03\u5C40\u53EF\u4EE5\u7528\u5E8F\u5217 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",{stretchy:"false"},"{"),n("mn",null,"2"),n("mo",{separator:"true"},","),n("mn",null,"4"),n("mo",{separator:"true"},","),n("mn",null,"6"),n("mo",{separator:"true"},","),n("mn",null,"1"),n("mo",{separator:"true"},","),n("mn",null,"3"),n("mo",{separator:"true"},","),n("mn",null,"5"),n("mo",{stretchy:"false"},"}")]),n("annotation",{encoding:"application/x-tex"},"\\{2,4,6,1,3,5\\}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"{"),n("span",{class:"mord"},"2"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"4"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"6"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"3"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"5"),n("span",{class:"mclose"},"}")])])]),s(" \u6765\u63CF\u8FF0\uFF0C\u7B2C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"i")]),n("annotation",{encoding:"application/x-tex"},"i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6595em"}}),n("span",{class:"mord mathnormal"},"i")])])]),s(" \u4E2A\u6570\u5B57\u8868\u793A\u5728\u7B2C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"i")]),n("annotation",{encoding:"application/x-tex"},"i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6595em"}}),n("span",{class:"mord mathnormal"},"i")])])]),s(" \u884C\u7684\u7B2C "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"a"),n("mi",null,"i")])]),n("annotation",{encoding:"application/x-tex"},"a_i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"a"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3117em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mathnormal mtight"},"i")])])]),n("span",{class:"vlist-s"},"\u200B")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])])])])]),s(" \u5217\u6709\u4E00\u4E2A\u68CB\u5B50\uFF0C\u5982\u4E0B\u6240\u793A")],-1),S=n("p",null,[s("\u200B \u884C\u53F7 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"i")]),n("annotation",{encoding:"application/x-tex"},"i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6595em"}}),n("span",{class:"mord mathnormal"},"i")])])]),s("\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",{stretchy:"false"},"{"),n("mn",null,"1"),n("mo",{separator:"true"},","),n("mn",null,"2"),n("mo",{separator:"true"},","),n("mn",null,"3"),n("mo",{separator:"true"},","),n("mn",null,"4"),n("mo",{separator:"true"},","),n("mn",null,"5"),n("mo",{separator:"true"},","),n("mn",null,"6"),n("mo",{stretchy:"false"},"}")]),n("annotation",{encoding:"application/x-tex"},"\\{1,2,3,4,5,6\\}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"{"),n("span",{class:"mord"},"1"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"3"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"4"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"5"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"6"),n("span",{class:"mclose"},"}")])])])],-1),B=n("p",null,[s("\u200B \u5217\u53F7 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"a"),n("mi",null,"i")])]),n("annotation",{encoding:"application/x-tex"},"a_i")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"a"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3117em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mathnormal mtight"},"i")])])]),n("span",{class:"vlist-s"},"\u200B")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])])])])]),s("\uFF1A"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",{stretchy:"false"},"{"),n("mn",null,"2"),n("mo",{separator:"true"},","),n("mn",null,"4"),n("mo",{separator:"true"},","),n("mn",null,"6"),n("mo",{separator:"true"},","),n("mn",null,"1"),n("mo",{separator:"true"},","),n("mn",null,"3"),n("mo",{separator:"true"},","),n("mn",null,"5"),n("mo",{stretchy:"false"},"}")]),n("annotation",{encoding:"application/x-tex"},"\\{2,4,6,1,3,5\\}")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"{"),n("span",{class:"mord"},"2"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"4"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"6"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"3"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},"5"),n("span",{class:"mclose"},"}")])])])],-1),N=n("p",null,[s("\u200B \u8FD9\u53EA\u662F\u8DF3\u68CB\u653E\u7F6E\u7684\u4E00\u4E2A\u65B9\u6848\u3002\u8BF7\u7F16\u4E00\u4E2A\u7A0B\u5E8F\u627E\u51FA\u6240\u6709\u65B9\u6848\u5E76\u628A\u5B83\u4EEC\u4EE5\u4E0A\u9762\u7684\u5E8F\u5217\u5316\u65B9\u6CD5\u8F93\u51FA\uFF0C\u6309\u5B57\u5178\u987A\u5E8F\u6392\u5217\u3002\u4F60\u53EA\u9700\u8F93\u51FA\u524D "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"3")]),n("annotation",{encoding:"application/x-tex"},"3")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"3")])])]),s(" \u4E2A\u89E3\u5E76\u5728\u6700\u540E\u4E00\u884C\u8F93\u51FA\u89E3\u7684\u603B\u4E2A\u6570\u3002\u7279\u522B\u6CE8\u610F\uFF1A\u4F60\u9700\u8981\u4F18\u5316\u4F60\u7684\u7A0B\u5E8F\u4EE5\u4FDD\u8BC1\u5728\u66F4\u5927\u68CB\u76D8\u5C3A\u5BF8\u4E0B\u7684\u7A0B\u5E8F\u6548\u7387\u3002")],-1),F=t(`<details class="custom-container details"><summary>\u53C2\u8003\u4EE3\u7801</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u8BE5\u4EE3\u7801\u4E3A\u56DE\u6EAF\u6CD5\u7684 DFS \u5B9E\u73B0</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token keyword">int</span> ans<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">,</span> check<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">eq</span><span class="token punctuation">(</span><span class="token keyword">int</span> line<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>line <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u641C\u7D22\u5B8Cn\u884C</span>
    sum<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>check<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>check<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span><span class="token operator">!</span>check<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line <span class="token operator">-</span> i <span class="token operator">+</span> n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5224\u65AD\u5728\u67D0\u4F4D\u7F6E\u653E\u7F6E\u662F\u5426\u5408\u6CD5</span>
      ans<span class="token punctuation">[</span>line<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
      check<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      check<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      check<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line <span class="token operator">-</span> i <span class="token operator">+</span> n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token function">eq</span><span class="token punctuation">(</span>line <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5411\u4E0B\u9012\u5F52\u540E\u8FDB\u884C\u56DE\u6EAF\uFF0C\u65B9\u4FBF\u4E0B\u4E00\u8F6E\u9012\u5F52</span>
      check<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      check<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      check<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>line <span class="token operator">-</span> i <span class="token operator">+</span> n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><hr>`,2),C={class:"custom-container note"},I=n("p",{class:"custom-container-title"},"\u8FF7\u5BAB",-1),T=s("\u200B "),V={href:"https://www.luogu.com.cn/problem/P1605",target:"_blank",rel:"noopener noreferrer"},E=s("\u4F20\u9001\u95E8"),D=n("p",null,[s("\u200B \u73B0\u6709\u4E00\u4E2A\u5C3A\u5BF8\u4E3A "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"N"),n("mo",null,"\xD7"),n("mi",null,"M")]),n("annotation",{encoding:"application/x-tex"},"N \\times M")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\xD7"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M")])])]),s(" \u7684\u8FF7\u5BAB\uFF0C\u8FF7\u5BAB\u91CC\u6709 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"T")]),n("annotation",{encoding:"application/x-tex"},"T")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])]),s(" \u5904\u969C\u788D\uFF0C\u969C\u788D\u5904\u4E0D\u53EF\u901A\u8FC7\u3002\u7ED9\u5B9A\u8D77\u70B9\u5750\u6807\u548C\u7EC8\u70B9\u5750\u6807\uFF0C\u4E14\u6BCF\u4E2A\u65B9\u683C\u6700\u591A\u7ECF\u8FC7\u4E00\u6B21\uFF0C\u95EE\u6709\u591A\u5C11\u79CD\u4ECE\u8D77\u70B9\u5750\u6807\u5230\u7EC8\u70B9\u5750\u6807\u7684\u65B9\u6848\u3002\u5728\u8FF7\u5BAB\u4E2D\u79FB\u52A8\u6709\u4E0A\u3001\u4E0B\u3001\u5DE6\u3001\u53F3\u56DB\u79CD\u79FB\u52A8\u65B9\u5F0F\uFF0C\u6BCF\u6B21\u53EA\u80FD\u79FB\u52A8\u4E00\u4E2A\u65B9\u683C\u3002\u6570\u636E\u4FDD\u8BC1\u8D77\u70B9\u4E0A\u6CA1\u6709\u969C\u788D\u3002")],-1),P=t(`<details class="custom-container details"><summary>\u53C2\u8003\u4EE3\u7801</summary><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token comment">// \u8BE5\u4EE3\u7801\u4E3A\u56DE\u6EAF\u6CD5\u7684 BFS \u5B9E\u73B0</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> k<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> ans<span class="token punctuation">;</span>
<span class="token keyword">int</span> dx<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> dy<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">// \u56DB\u4E2A\u65B9\u5411</span>
<span class="token keyword">bool</span> vis<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">oo</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> used<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

oo sa<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  queue<span class="token operator">&lt;</span>oo<span class="token operator">&gt;</span> q<span class="token punctuation">;</span>
  sa<span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>
  sa<span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>
  sa<span class="token punctuation">.</span>used<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sa<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// BFS\u961F\u5217</span>
    oo now <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u679A\u4E3E\u5411\u56DB\u4E2A\u65B9\u5411\u8D70</span>
      <span class="token keyword">int</span> sx <span class="token operator">=</span> now<span class="token punctuation">.</span>x <span class="token operator">+</span> dx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> sy <span class="token operator">=</span> now<span class="token punctuation">.</span>y <span class="token operator">+</span> dy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>now<span class="token punctuation">.</span>used<span class="token punctuation">[</span>sx<span class="token punctuation">]</span><span class="token punctuation">[</span>sy<span class="token punctuation">]</span> <span class="token operator">||</span> vis<span class="token punctuation">[</span>sx<span class="token punctuation">]</span><span class="token punctuation">[</span>sy<span class="token punctuation">]</span> <span class="token operator">||</span> sx <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> sy <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> sx <span class="token operator">&gt;</span> n <span class="token operator">||</span>
          sy <span class="token operator">&gt;</span> m<span class="token punctuation">)</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sx <span class="token operator">==</span> a <span class="token operator">&amp;&amp;</span> sy <span class="token operator">==</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ans<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      sa<span class="token punctuation">.</span>x <span class="token operator">=</span> sx<span class="token punctuation">;</span>
      sa<span class="token punctuation">.</span>y <span class="token operator">=</span> sy<span class="token punctuation">;</span>
      <span class="token function">memcpy</span><span class="token punctuation">(</span>sa<span class="token punctuation">.</span>used<span class="token punctuation">,</span> now<span class="token punctuation">.</span>used<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span>used<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      sa<span class="token punctuation">.</span>used<span class="token punctuation">[</span>sx<span class="token punctuation">]</span><span class="token punctuation">[</span>sy<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>sa<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u5047\u8BBE\u5411\u6B64\u65B9\u5411\u8D70\uFF0C\u653E\u5165BFS\u961F\u5217</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d%d%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">,</span> <span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d%d%d%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> <span class="token operator">&amp;</span>y<span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> aa<span class="token punctuation">,</span> bb<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">&quot;%d%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>aa<span class="token punctuation">,</span> <span class="token operator">&amp;</span>bb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    vis<span class="token punctuation">[</span>aa<span class="token punctuation">]</span><span class="token punctuation">[</span>bb<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// \u969C\u788D\u4F4D\u7F6E\u4E0D\u53EF\u901A\u8FC7</span>
  <span class="token punctuation">}</span>
  <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,1);function R(A,U){const p=c("RouterLink"),e=c("ExternalLinkIcon");return i(),u("div",null,[k,m,d,n("p",null,[v,a(p,{to:"/zh/OI-wiki/search/dfs.html"},{default:o(()=>[h]),_:1}),b,a(p,{to:"/zh/OI-wiki/search/bfs.html"},{default:o(()=>[g]),_:1}),y]),w,n("div",x,[_,n("p",null,[f,n("a",M,[q,a(e)])]),L,z,O,S,B,N]),F,n("div",C,[I,n("p",null,[T,n("a",V,[E,a(e)])]),D,P])])}var H=l(r,[["render",R],["__file","backtracking.html.vue"]]);export{H as default};
