import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";import{o as i,c as r,a as s,b as a,w as o,d as n,e as c,r as p}from"./app.073805c3.js";const u={},d=s("h1",{id:"interactor",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#interactor","aria-hidden":"true"},"#"),n(" Interactor")],-1),k=n("Interactor\uFF0C\u5373\u4EA4\u4E92\u5668\uFF0C\u7528\u4E8E\u4EA4\u4E92\u9898\u4E0E\u9009\u624B\u7A0B\u5E8F\u4EA4\u4E92\u3002\u4EA4\u4E92\u9898\u7684\u4ECB\u7ECD\u89C1 "),m=n("\u9898\u578B\u4ECB\u7ECD - \u4EA4\u4E92\u9898"),h=n("\u3002"),v=s("div",{class:"custom-container note"},[s("p",{class:"custom-container-title"},"\u6CE8"),s("p",null,"\u200B Testlib \u4EC5\u652F\u6301 Codeforces \u5F62\u5F0F\u4EA4\u4E92\u9898\uFF0C\u5373\u4E24\u7A0B\u5E8F\u4EA4\u4E92\u3002\u4E0D\u652F\u6301 NOI \u5F62\u5F0F\u7684\u9009\u624B\u7F16\u5199\u51FD\u6570\u4E0E\u5176\u4ED6\u51FD\u6570\u4EA4\u4E92\u3002")],-1),_=n("\u8BF7\u5728\u9605\u8BFB\u4E0B\u6587\u524D\u5148\u9605\u8BFB "),b=n("\u901A\u7528"),g=n("\u3002"),f=c(`<p>Testlib \u4E3A interactor \u63D0\u4F9B\u4E86\u4E00\u4E2A\u7279\u6B8A\u7684\u6D41 <code>std::fstream tout</code>\uFF0C\u5B83\u662F\u4E00\u4E2A log \u6D41\uFF0C\u4F60\u53EF\u4EE5\u5728 interactor \u4E2D\u5411\u5B83\u5199\u5165\uFF0C\u5E76\u5728 checker \u4E2D\u7528 <code>ouf</code> \u8BFB\u53D6\u3002</p><p>\u5728 interactor \u4E2D\uFF0C\u6211\u4EEC\u4ECE <code>inf</code> \u8BFB\u53D6\u9898\u76EE\u6D4B\u8BD5\u6570\u636E\uFF0C\u5C06\u9009\u624B\u7A0B\u5E8F\uFF08\u548C\u6807\u7A0B\uFF09\u7684\u6807\u51C6\u8F93\u5165\u5199\u5165 <code>stdout</code>\uFF08\u5728\u7EBF\uFF09\uFF0C\u4ECE <code>ouf</code> \u8BFB\u9009\u624B\u8F93\u51FA\uFF08\u5728\u7EBF\uFF09\uFF0C\u4ECE <code>ans</code> \u8BFB\u6807\u51C6\u8F93\u51FA\uFF08\u5728\u7EBF\uFF09\u3002</p><p>\u5982\u679C interactor \u8FD4\u56DE\u4E86 ok \u72B6\u6001\uFF0Cchecker\uFF08\u5982\u679C\u6709\u7684\u8BDD\uFF09\u5C06\u63A5\u7BA1\u5DE5\u4F5C\uFF0C\u68C0\u67E5\u7B54\u6848\u5408\u6CD5\u6027\u3002</p><h2 id="\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7528\u6CD5" aria-hidden="true">#</a> \u7528\u6CD5</h2><p>Windows:</p><div class="language-bat ext-bat line-numbers-mode"><pre class="language-bat"><code>interactor.exe &lt;Input_File&gt; &lt;Output_File&gt; [&lt;Answer_File&gt; [&lt;Result_File&gt; [-appes]]],
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Linux:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>./interactor.out <span class="token operator">&lt;</span>Input_File<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>Output_File<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>Answer_File<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>Result_File<span class="token operator">&gt;</span> <span class="token punctuation">[</span>-appes<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u7B80\u5355\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7684\u4F8B\u5B50" aria-hidden="true">#</a> \u7B80\u5355\u7684\u4F8B\u5B50</h2>`,9),w=s("div",{class:"custom-container note"},[s("p",{class:"custom-container-title"},"\u9898\u76EE"),s("p",null,[n("\u200B interactor \u968F\u673A\u9009\u62E9\u4E00\u4E2A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"9")]),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[1,10^9]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"9")])])])])])])]),s("span",{class:"mclose"},"]")])])]),n(" \u8303\u56F4\u5185\u7684\u6574\u6570\uFF0C\u4F60\u8981\u5199\u4E00\u4E2A\u7A0B\u5E8F\u6765\u731C\u5B83\uFF0C\u4F60\u6700\u591A\u53EF\u4EE5\u8BE2\u95EE "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"50")]),s("annotation",{encoding:"application/x-tex"},"50")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"50")])])]),n(" \u6B21\u4E00\u4E2A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("msup",null,[s("mn",null,"0"),s("mn",null,"9")]),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"},"[1,10^9]")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord"},[s("span",{class:"mord"},"0"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"9")])])])])])])]),s("span",{class:"mclose"},"]")])])]),n(" \u8303\u56F4\u5185\u7684\u6574\u6570\u3002 \u200B interactor \u5C06\u8FD4\u56DE\uFF1A \u200B "),s("code",null,"1"),n("\uFF1A\u8BE2\u95EE\u4E0E\u7B54\u6848\u76F8\u540C\uFF0C\u4F60\u7684\u7A0B\u5E8F\u5E94\u5F53\u505C\u6B62\u8BE2\u95EE\u3002 \u200B "),s("code",null,"0"),n("\uFF1A\u8BE2\u95EE\u6BD4\u7B54\u6848\u5C0F\u3002 \u200B "),s("code",null,"2"),n("\uFF1A\u8BE2\u95EE\u6BD4\u7B54\u6848\u5927\u3002")])],-1),x=c(`<p>\u6CE8\u610F\u5728\u6B64\u9898\u4E2D\u6211\u4EEC\u4E0D\u9700\u8981 <code>ans</code>\uFF0C\u56E0\u4E3A\u6211\u4EEC\u4E0D\u9700\u8981\u5C06\u6807\u51C6\u8F93\u51FA\u4E0E\u5176\u6BD4\u8F83\uFF1B\u800C\u5728\u5176\u4ED6\u9898\u4E2D\u53EF\u80FD\u9700\u8981\u8FD9\u4E48\u505A\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">registerInteraction</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> n <span class="token operator">=</span> inf<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u9009\u6570</span>
  cout<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// \u5237\u65B0\u7F13\u51B2\u533A</span>
  <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
  <span class="token keyword">bool</span> found <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>found<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    left<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> a <span class="token operator">=</span> ouf<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BE2\u95EE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> n<span class="token punctuation">)</span>
      cout <span class="token operator">&lt;&lt;</span> <span class="token number">0</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> n<span class="token punctuation">)</span>
      cout <span class="token operator">&lt;&lt;</span> <span class="token number">2</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
      cout <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">,</span> found <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    cout<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>found<span class="token punctuation">)</span> <span class="token function">quitf</span><span class="token punctuation">(</span>_wa<span class="token punctuation">,</span> <span class="token string">&quot;couldn&#39;t guess the number with 50 questions&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ouf<span class="token punctuation">.</span><span class="token function">readEof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">quitf</span><span class="token punctuation">(</span>_ok<span class="token punctuation">,</span> <span class="token string">&quot;guessed the number with %d questions!&quot;</span><span class="token punctuation">,</span> <span class="token number">50</span> <span class="token operator">-</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),y=n("\u672C\u6587\u4E3B\u8981\u7FFB\u8BD1\u81EA "),I={href:"https://codeforces.com/blog/entry/18455",target:"_blank",rel:"noopener noreferrer"},M=n("Interactors with testlib.h - Codeforces"),z=n("\u3002"),q=s("code",null,"testlib.h",-1),F=n(" \u7684 GitHub \u5B58\u50A8\u5E93\u4E3A "),L={href:"https://github.com/MikeMirzayanov/testlib",target:"_blank",rel:"noopener noreferrer"},N=n("MikeMirzayanov/testlib"),O=n("\u3002");function C(E,R){const t=p("RouterLink"),e=p("ExternalLinkIcon");return i(),r("div",null,[d,s("p",null,[k,a(t,{to:"/zh/OI-wiki/contest/problems.html#"},{default:o(()=>[m]),_:1}),h]),v,s("p",null,[_,a(t,{to:"/zh/OI-wiki/tools/testlib/general.html"},{default:o(()=>[b]),_:1}),g]),f,w,x,s("p",null,[s("strong",null,[y,s("a",I,[M,a(e)]),z,q,F,s("a",L,[N,a(e)]),O])])])}var T=l(u,[["render",C],["__file","interactor.html.vue"]]);export{T as default};
